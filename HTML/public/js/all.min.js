!(function (t) {
    var e = {};
    function n(a) {
        if (e[a]) return e[a].exports;
        var o = (e[a] = { i: a, l: !1, exports: {} });
        return t[a].call(o.exports, o, o.exports, n), (o.l = !0), o.exports;
    }
    (n.m = t),
        (n.c = e),
        (n.d = function (t, e, a) {
            n.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: a });
        }),
        (n.r = function (t) {
            'undefined' != typeof Symbol &&
                Symbol.toStringTag &&
                Object.defineProperty(t, Symbol.toStringTag, { value: 'Module' }),
                Object.defineProperty(t, '__esModule', { value: !0 });
        }),
        (n.t = function (t, e) {
            if ((1 & e && (t = n(t)), 8 & e)) return t;
            if (4 & e && 'object' == typeof t && t && t.__esModule) return t;
            var a = Object.create(null);
            if (
                (n.r(a),
                Object.defineProperty(a, 'default', { enumerable: !0, value: t }),
                2 & e && 'string' != typeof t)
            )
                for (var o in t)
                    n.d(
                        a,
                        o,
                        function (e) {
                            return t[e];
                        }.bind(null, o)
                    );
            return a;
        }),
        (n.n = function (t) {
            var e =
                t && t.__esModule
                    ? function () {
                          return t.default;
                      }
                    : function () {
                          return t;
                      };
            return n.d(e, 'a', e), e;
        }),
        (n.o = function (t, e) {
            return Object.prototype.hasOwnProperty.call(t, e);
        }),
        (n.p = ''),
        n((n.s = 0));
})([
    function (t, e, n) {
        'use strict';
        n.r(e);
        var a = (function () {
                function t(t) {
                    var e = this;
                    (this.listener = function (t) {
                        (t.matches ? e.matchFns : e.unmatchFns).forEach(function (t) {
                            t();
                        });
                    }),
                        (this.toggler = window.matchMedia(t)),
                        this.toggler.addListener(this.listener),
                        (this.matchFns = []),
                        (this.unmatchFns = []);
                }
                return (
                    (t.prototype.destroy = function () {
                        this.toggler.removeListener(this.listener),
                            this.unmatchFns.forEach(function (t) {
                                t();
                            }),
                            (this.matchFns = []),
                            (this.unmatchFns = []);
                    }),
                    (t.prototype.add = function (t, e) {
                        this.matchFns.push(t), this.unmatchFns.push(e), (this.toggler.matches ? t : e)();
                    }),
                    t
                );
            })(),
            o = { title: 'Menu', theme: 'light', slidingSubmenus: !0, selected: 'Selected' },
            i = { blockPage: !0, move: !0, position: 'left' },
            s = 'ontouchstart' in window || !!navigator.msMaxTouchPoints || !1,
            l = navigator.userAgent.indexOf('MSIE') > -1 || navigator.appVersion.indexOf('Trident/') > -1,
            r = function (t) {
                return Array.prototype.slice.call(t);
            },
            d = function (t, e) {
                return r((e || document).querySelectorAll(t));
            },
            c = (function () {
                function t(e, n) {
                    var a = this;
                    void 0 === n && (n = {}),
                        (this.options = {}),
                        Object.keys(t.options).forEach(function (e) {
                            a.options[e] = void 0 !== n[e] ? n[e] : t.options[e];
                        }),
                        l && (this.options.slidingSubmenus = !1),
                        (this.menu = e),
                        'dark' == this.options.theme && this.menu.classList.add('mm--dark'),
                        this.options.slidingSubmenus || this.menu.classList.add('mm--vertical'),
                        this._openPanel(),
                        this._initAnchors();
                }
                return (
                    (t.prototype.enable = function (t) {
                        var e = this;
                        return (
                            void 0 === t && (t = 'all'),
                            (this.toggler = new a(t)),
                            this.toggler.add(
                                function () {
                                    return e.menu.classList.add('mm');
                                },
                                function () {
                                    return e.menu.classList.remove('mm');
                                }
                            ),
                            this.toggler
                        );
                    }),
                    (t.prototype.disable = function () {
                        this.toggler.destroy();
                    }),
                    (t.prototype._openPanel = function () {
                        var t = d('.' + this.options.selected, this.menu),
                            e = t[t.length - 1],
                            n = null;
                        e && (n = e.closest('ul')), n || (n = this.menu.querySelector('ul')), this.openPanel(n);
                    }),
                    (t.prototype.openPanel = function (t) {
                        var e = t.dataset.mmTitle,
                            n = t.parentElement;
                        n === this.menu
                            ? this.menu.classList.add('mm--main')
                            : (this.menu.classList.remove('mm--main'),
                              e ||
                                  r(n.children).forEach(function (t) {
                                      t.matches('a, span') && (e = t.textContent);
                                  })),
                            e || (e = this.options.title),
                            (this.menu.dataset.mmTitle = e),
                            d('.mm--open', this.menu).forEach(function (t) {
                                t.classList.remove('mm--open', 'mm--parent');
                            }),
                            t.classList.add('mm--open'),
                            t.classList.remove('mm--parent');
                        for (var a = t.parentElement.closest('ul'); a; )
                            a.classList.add('mm--open', 'mm--parent'), (a = a.parentElement.closest('ul'));
                    }),
                    (t.prototype.togglePanel = function (t) {
                        if (this.options.slidingSubmenus) this.openPanel(t);
                        else {
                            var e = 'add';
                            t.matches('.mm--open') && (e = 'remove'),
                                t.classList[e]('mm--open'),
                                t.parentElement.classList[e]('mm--open');
                        }
                    }),
                    (t.prototype._initAnchors = function () {
                        var t = this;
                        this.menu.addEventListener('click', function (e) {
                            if (t.menu.matches('.mm')) {
                                var n = !1;
                                n =
                                    (n =
                                        (n =
                                            n ||
                                            (function (t) {
                                                return !!t.target.matches('a') && (t.stopImmediatePropagation(), !0);
                                            })(e)) ||
                                        (function (e) {
                                            var n,
                                                a = e.target;
                                            return (
                                                !!(n = a.closest('span') ? a.parentElement : !!a.closest('li') && a) &&
                                                (r(n.children).forEach(function (e) {
                                                    e.matches('ul') && t.togglePanel(e);
                                                }),
                                                e.stopImmediatePropagation(),
                                                !0)
                                            );
                                        })(e)) ||
                                    (function (e) {
                                        var n = e.target;
                                        if (n.matches('.mm')) {
                                            var a = d('.mm--open', n),
                                                o = a[a.length - 1];
                                            if (o) {
                                                var i = o.parentElement.closest('ul');
                                                i && t.openPanel(i);
                                            }
                                            return e.stopImmediatePropagation(), !0;
                                        }
                                        return !1;
                                    })(e);
                            }
                        });
                    }),
                    (t.version = '2.3.1'),
                    (t.options = o),
                    (t.optionsOffcanvas = i),
                    t
                );
            })();
        (c.prototype.open = function () {
            this.menu.matches('.mm') &&
                (this.menu.classList.add('mm--open'),
                document.body.classList.add('mm-body--open'),
                this.blocker && this.blocker.classList.add('mm--open'),
                this.menu.dispatchEvent(new Event('mm:open')));
        }),
            (c.prototype.close = function () {
                this.menu.classList.remove('mm--open'),
                    document.body.classList.remove('mm-body--open'),
                    this.blocker && this.blocker.classList.remove('mm--open'),
                    this.menu.dispatchEvent(new Event('mm:close'));
            }),
            (c.prototype.offcanvas = function (t) {
                var e = this;
                void 0 === t && (t = {});
                var n,
                    a = {};
                Object.keys(c.optionsOffcanvas).forEach(function (e) {
                    a[e] = void 0 !== t[e] ? t[e] : c.optionsOffcanvas[e];
                }),
                    this.menu.classList.add('mm--offcanvas'),
                    this.toggler.add(
                        function () {},
                        function () {
                            e.close();
                        }
                    ),
                    'right' == a.position && this.menu.classList.add('mm--right'),
                    a.move &&
                        this.toggler.add(
                            function () {
                                (n = document.createComment('original menu location')),
                                    e.menu.after(n),
                                    document.body.append(e.menu);
                            },
                            function () {
                                n && n.replaceWith(e.menu);
                            }
                        ),
                    a.blockPage &&
                        ((this.blocker = document.createElement('div')),
                        this.blocker.classList.add('mm-blocker'),
                        'right' == a.position && this.blocker.classList.add('mm--right'),
                        document.body.append(this.blocker),
                        'modal' != a.blockPage &&
                            function () {
                                var t = this;
                                this.blocker.addEventListener(s ? 'touchstart' : 'mousedown', function (e) {
                                    return (
                                        !!t.menu.matches('.mm') &&
                                        !!t.menu.matches('.mm--open') &&
                                        (t.close(), e.preventDefault(), e.stopImmediatePropagation(), !0)
                                    );
                                });
                            }.call(this),
                        this.toggler.add(
                            function () {
                                e.blocker.classList.remove('mm-hidden');
                            },
                            function () {
                                e.blocker.classList.add('mm-hidden');
                            }
                        ));
            }),
            (e.default = c),
            (window.MmenuLight = c);
    },
]),
    (function (t) {
        'function' == typeof define && define.amd
            ? define(['jquery'], t)
            : t('object' == typeof exports ? require('jquery') : jQuery);
    })(function (t, e) {
        function n() {
            return new Date(Date.UTC.apply(Date, arguments));
        }
        function a() {
            var t = new Date();
            return n(t.getFullYear(), t.getMonth(), t.getDate());
        }
        function o(t, e) {
            return (
                t.getUTCFullYear() === e.getUTCFullYear() &&
                t.getUTCMonth() === e.getUTCMonth() &&
                t.getUTCDate() === e.getUTCDate()
            );
        }
        function i(n, a) {
            return function () {
                return a !== e && t.fn.datepicker.deprecated(a), this[n].apply(this, arguments);
            };
        }
        function s(e) {
            var n = {};
            if (f[e] || ((e = e.split('-')[0]), f[e])) {
                var a = f[e];
                return (
                    t.each(p, function (t, e) {
                        e in a && (n[e] = a[e]);
                    }),
                    n
                );
            }
        }
        var l = (function () {
                var e = {
                    get: function (t) {
                        return this.slice(t)[0];
                    },
                    contains: function (t) {
                        for (var e = t && t.valueOf(), n = 0, a = this.length; n < a; n++)
                            if (0 <= this[n].valueOf() - e && this[n].valueOf() - e < 864e5) return n;
                        return -1;
                    },
                    remove: function (t) {
                        this.splice(t, 1);
                    },
                    replace: function (e) {
                        e && (t.isArray(e) || (e = [e]), this.clear(), this.push.apply(this, e));
                    },
                    clear: function () {
                        this.length = 0;
                    },
                    copy: function () {
                        var t = new l();
                        return t.replace(this), t;
                    },
                };
                return function () {
                    var n = [];
                    return n.push.apply(n, arguments), t.extend(n, e), n;
                };
            })(),
            r = function (e, n) {
                t.data(e, 'datepicker', this),
                    (this._events = []),
                    (this._secondaryEvents = []),
                    this._process_options(n),
                    (this.dates = new l()),
                    (this.viewDate = this.o.defaultViewDate),
                    (this.focusDate = null),
                    (this.element = t(e)),
                    (this.isInput = this.element.is('input')),
                    (this.inputField = this.isInput ? this.element : this.element.find('input')),
                    (this.component =
                        !!this.element.hasClass('date') &&
                        this.element.find(
                            '.add-on, .input-group-addon, .input-group-append, .input-group-prepend, .btn'
                        )),
                    this.component && 0 === this.component.length && (this.component = !1),
                    (this.isInline = !this.component && this.element.is('div')),
                    (this.picker = t(m.template)),
                    this._check_template(this.o.templates.leftArrow) &&
                        this.picker.find('.prev').html(this.o.templates.leftArrow),
                    this._check_template(this.o.templates.rightArrow) &&
                        this.picker.find('.next').html(this.o.templates.rightArrow),
                    this._buildEvents(),
                    this._attachEvents(),
                    this.isInline
                        ? this.picker.addClass('datepicker-inline').appendTo(this.element)
                        : this.picker.addClass('datepicker-dropdown dropdown-menu'),
                    this.o.rtl && this.picker.addClass('datepicker-rtl'),
                    this.o.calendarWeeks &&
                        this.picker
                            .find(
                                '.datepicker-days .datepicker-switch, thead .datepicker-title, tfoot .today, tfoot .clear'
                            )
                            .attr('colspan', function (t, e) {
                                return Number(e) + 1;
                            }),
                    this._process_options({
                        startDate: this._o.startDate,
                        endDate: this._o.endDate,
                        daysOfWeekDisabled: this.o.daysOfWeekDisabled,
                        daysOfWeekHighlighted: this.o.daysOfWeekHighlighted,
                        datesDisabled: this.o.datesDisabled,
                    }),
                    (this._allow_update = !1),
                    this.setViewMode(this.o.startView),
                    (this._allow_update = !0),
                    this.fillDow(),
                    this.fillMonths(),
                    this.update(),
                    this.isInline && this.show();
            };
        r.prototype = {
            constructor: r,
            _resolveViewName: function (e) {
                return (
                    t.each(m.viewModes, function (n, a) {
                        if (e === n || -1 !== t.inArray(e, a.names)) return (e = n), !1;
                    }),
                    e
                );
            },
            _resolveDaysOfWeek: function (e) {
                return t.isArray(e) || (e = e.split(/[,\s]*/)), t.map(e, Number);
            },
            _check_template: function (n) {
                try {
                    return n !== e && '' !== n && ((n.match(/[<>]/g) || []).length <= 0 || t(n).length > 0);
                } catch (t) {
                    return !1;
                }
            },
            _process_options: function (e) {
                this._o = t.extend({}, this._o, e);
                var o = (this.o = t.extend({}, this._o)),
                    i = o.language;
                f[i] || ((i = i.split('-')[0]), f[i] || (i = u.language)),
                    (o.language = i),
                    (o.startView = this._resolveViewName(o.startView)),
                    (o.minViewMode = this._resolveViewName(o.minViewMode)),
                    (o.maxViewMode = this._resolveViewName(o.maxViewMode)),
                    (o.startView = Math.max(this.o.minViewMode, Math.min(this.o.maxViewMode, o.startView))),
                    !0 !== o.multidate &&
                        ((o.multidate = Number(o.multidate) || !1),
                        !1 !== o.multidate && (o.multidate = Math.max(0, o.multidate))),
                    (o.multidateSeparator = String(o.multidateSeparator)),
                    (o.weekStart %= 7),
                    (o.weekEnd = (o.weekStart + 6) % 7);
                var s = m.parseFormat(o.format);
                o.startDate !== -1 / 0 &&
                    (o.startDate
                        ? o.startDate instanceof Date
                            ? (o.startDate = this._local_to_utc(this._zero_time(o.startDate)))
                            : (o.startDate = m.parseDate(o.startDate, s, o.language, o.assumeNearbyYear))
                        : (o.startDate = -1 / 0)),
                    o.endDate !== 1 / 0 &&
                        (o.endDate
                            ? o.endDate instanceof Date
                                ? (o.endDate = this._local_to_utc(this._zero_time(o.endDate)))
                                : (o.endDate = m.parseDate(o.endDate, s, o.language, o.assumeNearbyYear))
                            : (o.endDate = 1 / 0)),
                    (o.daysOfWeekDisabled = this._resolveDaysOfWeek(o.daysOfWeekDisabled || [])),
                    (o.daysOfWeekHighlighted = this._resolveDaysOfWeek(o.daysOfWeekHighlighted || [])),
                    (o.datesDisabled = o.datesDisabled || []),
                    t.isArray(o.datesDisabled) || (o.datesDisabled = o.datesDisabled.split(',')),
                    (o.datesDisabled = t.map(o.datesDisabled, function (t) {
                        return m.parseDate(t, s, o.language, o.assumeNearbyYear);
                    }));
                var l = String(o.orientation).toLowerCase().split(/\s+/g),
                    r = o.orientation.toLowerCase();
                if (
                    ((l = t.grep(l, function (t) {
                        return /^auto|left|right|top|bottom$/.test(t);
                    })),
                    (o.orientation = { x: 'auto', y: 'auto' }),
                    r && 'auto' !== r)
                )
                    if (1 === l.length)
                        switch (l[0]) {
                            case 'top':
                            case 'bottom':
                                o.orientation.y = l[0];
                                break;
                            case 'left':
                            case 'right':
                                o.orientation.x = l[0];
                        }
                    else
                        (r = t.grep(l, function (t) {
                            return /^left|right$/.test(t);
                        })),
                            (o.orientation.x = r[0] || 'auto'),
                            (r = t.grep(l, function (t) {
                                return /^top|bottom$/.test(t);
                            })),
                            (o.orientation.y = r[0] || 'auto');
                if (o.defaultViewDate instanceof Date || 'string' == typeof o.defaultViewDate)
                    o.defaultViewDate = m.parseDate(o.defaultViewDate, s, o.language, o.assumeNearbyYear);
                else if (o.defaultViewDate) {
                    var d = o.defaultViewDate.year || new Date().getFullYear(),
                        c = o.defaultViewDate.month || 0,
                        h = o.defaultViewDate.day || 1;
                    o.defaultViewDate = n(d, c, h);
                } else o.defaultViewDate = a();
            },
            _applyEvents: function (t) {
                for (var n, a, o, i = 0; i < t.length; i++)
                    (n = t[i][0]),
                        2 === t[i].length
                            ? ((a = e), (o = t[i][1]))
                            : 3 === t[i].length && ((a = t[i][1]), (o = t[i][2])),
                        n.on(o, a);
            },
            _unapplyEvents: function (t) {
                for (var n, a, o, i = 0; i < t.length; i++)
                    (n = t[i][0]),
                        2 === t[i].length
                            ? ((o = e), (a = t[i][1]))
                            : 3 === t[i].length && ((o = t[i][1]), (a = t[i][2])),
                        n.off(a, o);
            },
            _buildEvents: function () {
                var e = {
                    keyup: t.proxy(function (e) {
                        -1 === t.inArray(e.keyCode, [27, 37, 39, 38, 40, 32, 13, 9]) && this.update();
                    }, this),
                    keydown: t.proxy(this.keydown, this),
                    paste: t.proxy(this.paste, this),
                };
                !0 === this.o.showOnFocus && (e.focus = t.proxy(this.show, this)),
                    this.isInput
                        ? (this._events = [[this.element, e]])
                        : this.component && this.inputField.length
                        ? (this._events = [
                              [this.inputField, e],
                              [this.component, { click: t.proxy(this.show, this) }],
                          ])
                        : (this._events = [
                              [this.element, { click: t.proxy(this.show, this), keydown: t.proxy(this.keydown, this) }],
                          ]),
                    this._events.push(
                        [
                            this.element,
                            '*',
                            {
                                blur: t.proxy(function (t) {
                                    this._focused_from = t.target;
                                }, this),
                            },
                        ],
                        [
                            this.element,
                            {
                                blur: t.proxy(function (t) {
                                    this._focused_from = t.target;
                                }, this),
                            },
                        ]
                    ),
                    this.o.immediateUpdates &&
                        this._events.push([
                            this.element,
                            {
                                'changeYear changeMonth': t.proxy(function (t) {
                                    this.update(t.date);
                                }, this),
                            },
                        ]),
                    (this._secondaryEvents = [
                        [this.picker, { click: t.proxy(this.click, this) }],
                        [this.picker, '.prev, .next', { click: t.proxy(this.navArrowsClick, this) }],
                        [this.picker, '.day:not(.disabled)', { click: t.proxy(this.dayCellClick, this) }],
                        [t(window), { resize: t.proxy(this.place, this) }],
                        [
                            t(document),
                            {
                                'mousedown touchstart': t.proxy(function (t) {
                                    this.element.is(t.target) ||
                                        this.element.find(t.target).length ||
                                        this.picker.is(t.target) ||
                                        this.picker.find(t.target).length ||
                                        this.isInline ||
                                        this.hide();
                                }, this),
                            },
                        ],
                    ]);
            },
            _attachEvents: function () {
                this._detachEvents(), this._applyEvents(this._events);
            },
            _detachEvents: function () {
                this._unapplyEvents(this._events);
            },
            _attachSecondaryEvents: function () {
                this._detachSecondaryEvents(), this._applyEvents(this._secondaryEvents);
            },
            _detachSecondaryEvents: function () {
                this._unapplyEvents(this._secondaryEvents);
            },
            _trigger: function (e, n) {
                var a = n || this.dates.get(-1),
                    o = this._utc_to_local(a);
                this.element.trigger({
                    type: e,
                    date: o,
                    viewMode: this.viewMode,
                    dates: t.map(this.dates, this._utc_to_local),
                    format: t.proxy(function (t, e) {
                        0 === arguments.length
                            ? ((t = this.dates.length - 1), (e = this.o.format))
                            : 'string' == typeof t && ((e = t), (t = this.dates.length - 1)),
                            (e = e || this.o.format);
                        var n = this.dates.get(t);
                        return m.formatDate(n, e, this.o.language);
                    }, this),
                });
            },
            show: function () {
                if (
                    !(
                        this.inputField.is(':disabled') ||
                        (this.inputField.prop('readonly') && !1 === this.o.enableOnReadonly)
                    )
                )
                    return (
                        this.isInline || this.picker.appendTo(this.o.container),
                        this.place(),
                        this.picker.show(),
                        this._attachSecondaryEvents(),
                        this._trigger('show'),
                        (window.navigator.msMaxTouchPoints || 'ontouchstart' in document) &&
                            this.o.disableTouchKeyboard &&
                            t(this.element).blur(),
                        this
                    );
            },
            hide: function () {
                return this.isInline || !this.picker.is(':visible')
                    ? this
                    : ((this.focusDate = null),
                      this.picker.hide().detach(),
                      this._detachSecondaryEvents(),
                      this.setViewMode(this.o.startView),
                      this.o.forceParse && this.inputField.val() && this.setValue(),
                      this._trigger('hide'),
                      this);
            },
            destroy: function () {
                return (
                    this.hide(),
                    this._detachEvents(),
                    this._detachSecondaryEvents(),
                    this.picker.remove(),
                    delete this.element.data().datepicker,
                    this.isInput || delete this.element.data().date,
                    this
                );
            },
            paste: function (e) {
                var n;
                if (
                    e.originalEvent.clipboardData &&
                    e.originalEvent.clipboardData.types &&
                    -1 !== t.inArray('text/plain', e.originalEvent.clipboardData.types)
                )
                    n = e.originalEvent.clipboardData.getData('text/plain');
                else {
                    if (!window.clipboardData) return;
                    n = window.clipboardData.getData('Text');
                }
                this.setDate(n), this.update(), e.preventDefault();
            },
            _utc_to_local: function (t) {
                if (!t) return t;
                var e = new Date(t.getTime() + 6e4 * t.getTimezoneOffset());
                return (
                    e.getTimezoneOffset() !== t.getTimezoneOffset() &&
                        (e = new Date(t.getTime() + 6e4 * e.getTimezoneOffset())),
                    e
                );
            },
            _local_to_utc: function (t) {
                return t && new Date(t.getTime() - 6e4 * t.getTimezoneOffset());
            },
            _zero_time: function (t) {
                return t && new Date(t.getFullYear(), t.getMonth(), t.getDate());
            },
            _zero_utc_time: function (t) {
                return t && n(t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate());
            },
            getDates: function () {
                return t.map(this.dates, this._utc_to_local);
            },
            getUTCDates: function () {
                return t.map(this.dates, function (t) {
                    return new Date(t);
                });
            },
            getDate: function () {
                return this._utc_to_local(this.getUTCDate());
            },
            getUTCDate: function () {
                var t = this.dates.get(-1);
                return t !== e ? new Date(t) : null;
            },
            clearDates: function () {
                this.inputField.val(''), this.update(), this._trigger('changeDate'), this.o.autoclose && this.hide();
            },
            setDates: function () {
                var e = t.isArray(arguments[0]) ? arguments[0] : arguments;
                return this.update.apply(this, e), this._trigger('changeDate'), this.setValue(), this;
            },
            setUTCDates: function () {
                var e = t.isArray(arguments[0]) ? arguments[0] : arguments;
                return this.setDates.apply(this, t.map(e, this._utc_to_local)), this;
            },
            setDate: i('setDates'),
            setUTCDate: i('setUTCDates'),
            remove: i(
                'destroy',
                'Method `remove` is deprecated and will be removed in version 2.0. Use `destroy` instead'
            ),
            setValue: function () {
                var t = this.getFormattedDate();
                return this.inputField.val(t), this;
            },
            getFormattedDate: function (n) {
                n === e && (n = this.o.format);
                var a = this.o.language;
                return t
                    .map(this.dates, function (t) {
                        return m.formatDate(t, n, a);
                    })
                    .join(this.o.multidateSeparator);
            },
            getStartDate: function () {
                return this.o.startDate;
            },
            setStartDate: function (t) {
                return this._process_options({ startDate: t }), this.update(), this.updateNavArrows(), this;
            },
            getEndDate: function () {
                return this.o.endDate;
            },
            setEndDate: function (t) {
                return this._process_options({ endDate: t }), this.update(), this.updateNavArrows(), this;
            },
            setDaysOfWeekDisabled: function (t) {
                return this._process_options({ daysOfWeekDisabled: t }), this.update(), this;
            },
            setDaysOfWeekHighlighted: function (t) {
                return this._process_options({ daysOfWeekHighlighted: t }), this.update(), this;
            },
            setDatesDisabled: function (t) {
                return this._process_options({ datesDisabled: t }), this.update(), this;
            },
            place: function () {
                if (this.isInline) return this;
                var e = this.picker.outerWidth(),
                    n = this.picker.outerHeight(),
                    a = t(this.o.container),
                    o = a.width(),
                    i = 'body' === this.o.container ? t(document).scrollTop() : a.scrollTop(),
                    s = a.offset(),
                    l = [0];
                this.element.parents().each(function () {
                    var e = t(this).css('z-index');
                    'auto' !== e && 0 !== Number(e) && l.push(Number(e));
                });
                var r = Math.max.apply(Math, l) + this.o.zIndexOffset,
                    d = this.component ? this.component.parent().offset() : this.element.offset(),
                    c = this.component ? this.component.outerHeight(!0) : this.element.outerHeight(!1),
                    h = this.component ? this.component.outerWidth(!0) : this.element.outerWidth(!1),
                    u = d.left - s.left,
                    p = d.top - s.top;
                'body' !== this.o.container && (p += i),
                    this.picker.removeClass(
                        'datepicker-orient-top datepicker-orient-bottom datepicker-orient-right datepicker-orient-left'
                    ),
                    'auto' !== this.o.orientation.x
                        ? (this.picker.addClass('datepicker-orient-' + this.o.orientation.x),
                          'right' === this.o.orientation.x && (u -= e - h))
                        : d.left < 0
                        ? (this.picker.addClass('datepicker-orient-left'), (u -= d.left - 10))
                        : u + e > o
                        ? (this.picker.addClass('datepicker-orient-right'), (u += h - e))
                        : this.o.rtl
                        ? this.picker.addClass('datepicker-orient-right')
                        : this.picker.addClass('datepicker-orient-left');
                var f = this.o.orientation.y;
                if (
                    ('auto' === f && (f = -i + p - n < 0 ? 'bottom' : 'top'),
                    this.picker.addClass('datepicker-orient-' + f),
                    'top' === f ? (p -= n + parseInt(this.picker.css('padding-top'))) : (p += c),
                    this.o.rtl)
                ) {
                    var m = o - (u + h);
                    this.picker.css({ top: p, right: m, zIndex: r });
                } else this.picker.css({ top: p, left: u, zIndex: r });
                return this;
            },
            _allow_update: !0,
            update: function () {
                if (!this._allow_update) return this;
                var e = this.dates.copy(),
                    n = [],
                    a = !1;
                return (
                    arguments.length
                        ? (t.each(
                              arguments,
                              t.proxy(function (t, e) {
                                  e instanceof Date && (e = this._local_to_utc(e)), n.push(e);
                              }, this)
                          ),
                          (a = !0))
                        : ((n =
                              (n = this.isInput
                                  ? this.element.val()
                                  : this.element.data('date') || this.inputField.val()) && this.o.multidate
                                  ? n.split(this.o.multidateSeparator)
                                  : [n]),
                          delete this.element.data().date),
                    (n = t.map(
                        n,
                        t.proxy(function (t) {
                            return m.parseDate(t, this.o.format, this.o.language, this.o.assumeNearbyYear);
                        }, this)
                    )),
                    (n = t.grep(
                        n,
                        t.proxy(function (t) {
                            return !this.dateWithinRange(t) || !t;
                        }, this),
                        !0
                    )),
                    this.dates.replace(n),
                    this.o.updateViewDate &&
                        (this.dates.length
                            ? (this.viewDate = new Date(this.dates.get(-1)))
                            : this.viewDate < this.o.startDate
                            ? (this.viewDate = new Date(this.o.startDate))
                            : this.viewDate > this.o.endDate
                            ? (this.viewDate = new Date(this.o.endDate))
                            : (this.viewDate = this.o.defaultViewDate)),
                    a
                        ? (this.setValue(), this.element.change())
                        : this.dates.length &&
                          String(e) !== String(this.dates) &&
                          a &&
                          (this._trigger('changeDate'), this.element.change()),
                    !this.dates.length && e.length && (this._trigger('clearDate'), this.element.change()),
                    this.fill(),
                    this
                );
            },
            fillDow: function () {
                if (this.o.showWeekDays) {
                    var e = this.o.weekStart,
                        n = '<tr>';
                    for (this.o.calendarWeeks && (n += '<th class="cw">&#160;</th>'); e < this.o.weekStart + 7; )
                        (n += '<th class="dow'),
                            -1 !== t.inArray(e, this.o.daysOfWeekDisabled) && (n += ' disabled'),
                            (n += '">' + f[this.o.language].daysMin[e++ % 7] + '</th>');
                    (n += '</tr>'), this.picker.find('.datepicker-days thead').append(n);
                }
            },
            fillMonths: function () {
                for (var t = this._utc_to_local(this.viewDate), e = '', n = 0; n < 12; n++)
                    e +=
                        '<span class="month' +
                        (t && t.getMonth() === n ? ' focused' : '') +
                        '">' +
                        f[this.o.language].monthsShort[n] +
                        '</span>';
                this.picker.find('.datepicker-months td').html(e);
            },
            setRange: function (e) {
                e && e.length
                    ? (this.range = t.map(e, function (t) {
                          return t.valueOf();
                      }))
                    : delete this.range,
                    this.fill();
            },
            getClassNames: function (e) {
                var n = [],
                    i = this.viewDate.getUTCFullYear(),
                    s = this.viewDate.getUTCMonth(),
                    l = a();
                return (
                    e.getUTCFullYear() < i || (e.getUTCFullYear() === i && e.getUTCMonth() < s)
                        ? n.push('old')
                        : (e.getUTCFullYear() > i || (e.getUTCFullYear() === i && e.getUTCMonth() > s)) &&
                          n.push('new'),
                    this.focusDate && e.valueOf() === this.focusDate.valueOf() && n.push('focused'),
                    this.o.todayHighlight && o(e, l) && n.push('today'),
                    -1 !== this.dates.contains(e) && n.push('active'),
                    this.dateWithinRange(e) || n.push('disabled'),
                    this.dateIsDisabled(e) && n.push('disabled', 'disabled-date'),
                    -1 !== t.inArray(e.getUTCDay(), this.o.daysOfWeekHighlighted) && n.push('highlighted'),
                    this.range &&
                        (e > this.range[0] && e < this.range[this.range.length - 1] && n.push('range'),
                        -1 !== t.inArray(e.valueOf(), this.range) && n.push('selected'),
                        e.valueOf() === this.range[0] && n.push('range-start'),
                        e.valueOf() === this.range[this.range.length - 1] && n.push('range-end')),
                    n
                );
            },
            _fill_yearsView: function (n, a, o, i, s, l, r) {
                for (
                    var d,
                        c,
                        h,
                        u = '',
                        p = o / 10,
                        f = this.picker.find(n),
                        m = Math.floor(i / o) * o,
                        g = m + 9 * p,
                        v = Math.floor(this.viewDate.getFullYear() / p) * p,
                        y = t.map(this.dates, function (t) {
                            return Math.floor(t.getUTCFullYear() / p) * p;
                        }),
                        b = m - p;
                    b <= g + p;
                    b += p
                )
                    (d = [a]),
                        (c = null),
                        b === m - p ? d.push('old') : b === g + p && d.push('new'),
                        -1 !== t.inArray(b, y) && d.push('active'),
                        (b < s || b > l) && d.push('disabled'),
                        b === v && d.push('focused'),
                        r !== t.noop &&
                            ((h = r(new Date(b, 0, 1))) === e
                                ? (h = {})
                                : 'boolean' == typeof h
                                ? (h = { enabled: h })
                                : 'string' == typeof h && (h = { classes: h }),
                            !1 === h.enabled && d.push('disabled'),
                            h.classes && (d = d.concat(h.classes.split(/\s+/))),
                            h.tooltip && (c = h.tooltip)),
                        (u +=
                            '<span class="' +
                            d.join(' ') +
                            '"' +
                            (c ? ' title="' + c + '"' : '') +
                            '>' +
                            b +
                            '</span>');
                f.find('.datepicker-switch').text(m + '-' + g), f.find('td').html(u);
            },
            fill: function () {
                var o,
                    i,
                    s = new Date(this.viewDate),
                    l = s.getUTCFullYear(),
                    r = s.getUTCMonth(),
                    d = this.o.startDate !== -1 / 0 ? this.o.startDate.getUTCFullYear() : -1 / 0,
                    c = this.o.startDate !== -1 / 0 ? this.o.startDate.getUTCMonth() : -1 / 0,
                    h = this.o.endDate !== 1 / 0 ? this.o.endDate.getUTCFullYear() : 1 / 0,
                    u = this.o.endDate !== 1 / 0 ? this.o.endDate.getUTCMonth() : 1 / 0,
                    p = f[this.o.language].today || f.en.today || '',
                    g = f[this.o.language].clear || f.en.clear || '',
                    v = f[this.o.language].titleFormat || f.en.titleFormat,
                    y = a(),
                    b =
                        (!0 === this.o.todayBtn || 'linked' === this.o.todayBtn) &&
                        y >= this.o.startDate &&
                        y <= this.o.endDate &&
                        !this.weekOfDateIsDisabled(y);
                if (!isNaN(l) && !isNaN(r)) {
                    this.picker.find('.datepicker-days .datepicker-switch').text(m.formatDate(s, v, this.o.language)),
                        this.picker
                            .find('tfoot .today')
                            .text(p)
                            .css('display', b ? 'table-cell' : 'none'),
                        this.picker
                            .find('tfoot .clear')
                            .text(g)
                            .css('display', !0 === this.o.clearBtn ? 'table-cell' : 'none'),
                        this.picker
                            .find('thead .datepicker-title')
                            .text(this.o.title)
                            .css(
                                'display',
                                'string' == typeof this.o.title && '' !== this.o.title ? 'table-cell' : 'none'
                            ),
                        this.updateNavArrows(),
                        this.fillMonths();
                    var x = n(l, r, 0),
                        D = x.getUTCDate();
                    x.setUTCDate(D - ((x.getUTCDay() - this.o.weekStart + 7) % 7));
                    var $ = new Date(x);
                    x.getUTCFullYear() < 100 && $.setUTCFullYear(x.getUTCFullYear()),
                        $.setUTCDate($.getUTCDate() + 42),
                        ($ = $.valueOf());
                    for (var _, k, w = []; x.valueOf() < $; ) {
                        if ((_ = x.getUTCDay()) === this.o.weekStart && (w.push('<tr>'), this.o.calendarWeeks)) {
                            var T = new Date(+x + ((this.o.weekStart - _ - 7) % 7) * 864e5),
                                C = new Date(Number(T) + ((11 - T.getUTCDay()) % 7) * 864e5),
                                M = new Date(
                                    Number((M = n(C.getUTCFullYear(), 0, 1))) + ((11 - M.getUTCDay()) % 7) * 864e5
                                ),
                                S = (C - M) / 864e5 / 7 + 1;
                            w.push('<td class="cw">' + S + '</td>');
                        }
                        (k = this.getClassNames(x)).push('day');
                        var L = x.getUTCDate();
                        this.o.beforeShowDay !== t.noop &&
                            ((i = this.o.beforeShowDay(this._utc_to_local(x))) === e
                                ? (i = {})
                                : 'boolean' == typeof i
                                ? (i = { enabled: i })
                                : 'string' == typeof i && (i = { classes: i }),
                            !1 === i.enabled && k.push('disabled'),
                            i.classes && (k = k.concat(i.classes.split(/\s+/))),
                            i.tooltip && (o = i.tooltip),
                            i.content && (L = i.content)),
                            (k = t.isFunction(t.uniqueSort) ? t.uniqueSort(k) : t.unique(k)),
                            w.push(
                                '<td class="' +
                                    k.join(' ') +
                                    '"' +
                                    (o ? ' title="' + o + '"' : '') +
                                    ' data-date="' +
                                    x.getTime().toString() +
                                    '">' +
                                    L +
                                    '</td>'
                            ),
                            (o = null),
                            _ === this.o.weekEnd && w.push('</tr>'),
                            x.setUTCDate(x.getUTCDate() + 1);
                    }
                    this.picker.find('.datepicker-days tbody').html(w.join(''));
                    var O = f[this.o.language].monthsTitle || f.en.monthsTitle || 'Months',
                        I = this.picker
                            .find('.datepicker-months')
                            .find('.datepicker-switch')
                            .text(this.o.maxViewMode < 2 ? O : l)
                            .end()
                            .find('tbody span')
                            .removeClass('active');
                    if (
                        (t.each(this.dates, function (t, e) {
                            e.getUTCFullYear() === l && I.eq(e.getUTCMonth()).addClass('active');
                        }),
                        (l < d || l > h) && I.addClass('disabled'),
                        l === d && I.slice(0, c).addClass('disabled'),
                        l === h && I.slice(u + 1).addClass('disabled'),
                        this.o.beforeShowMonth !== t.noop)
                    ) {
                        var A = this;
                        t.each(I, function (n, a) {
                            var o = new Date(l, n, 1),
                                i = A.o.beforeShowMonth(o);
                            i === e
                                ? (i = {})
                                : 'boolean' == typeof i
                                ? (i = { enabled: i })
                                : 'string' == typeof i && (i = { classes: i }),
                                !1 !== i.enabled || t(a).hasClass('disabled') || t(a).addClass('disabled'),
                                i.classes && t(a).addClass(i.classes),
                                i.tooltip && t(a).prop('title', i.tooltip);
                        });
                    }
                    this._fill_yearsView('.datepicker-years', 'year', 10, l, d, h, this.o.beforeShowYear),
                        this._fill_yearsView('.datepicker-decades', 'decade', 100, l, d, h, this.o.beforeShowDecade),
                        this._fill_yearsView(
                            '.datepicker-centuries',
                            'century',
                            1e3,
                            l,
                            d,
                            h,
                            this.o.beforeShowCentury
                        );
                }
            },
            updateNavArrows: function () {
                if (this._allow_update) {
                    var t,
                        e,
                        n = new Date(this.viewDate),
                        a = n.getUTCFullYear(),
                        o = n.getUTCMonth(),
                        i = this.o.startDate !== -1 / 0 ? this.o.startDate.getUTCFullYear() : -1 / 0,
                        s = this.o.startDate !== -1 / 0 ? this.o.startDate.getUTCMonth() : -1 / 0,
                        l = this.o.endDate !== 1 / 0 ? this.o.endDate.getUTCFullYear() : 1 / 0,
                        r = this.o.endDate !== 1 / 0 ? this.o.endDate.getUTCMonth() : 1 / 0,
                        d = 1;
                    switch (this.viewMode) {
                        case 4:
                            d *= 10;
                        case 3:
                            d *= 10;
                        case 2:
                            d *= 10;
                        case 1:
                            (t = Math.floor(a / d) * d <= i), (e = Math.floor(a / d) * d + d > l);
                            break;
                        case 0:
                            (t = a <= i && o <= s), (e = a >= l && o >= r);
                    }
                    this.picker.find('.prev').toggleClass('disabled', t),
                        this.picker.find('.next').toggleClass('disabled', e);
                }
            },
            click: function (e) {
                var o, i, s;
                e.preventDefault(),
                    e.stopPropagation(),
                    (o = t(e.target)).hasClass('datepicker-switch') &&
                        this.viewMode !== this.o.maxViewMode &&
                        this.setViewMode(this.viewMode + 1),
                    o.hasClass('today') &&
                        !o.hasClass('day') &&
                        (this.setViewMode(0), this._setDate(a(), 'linked' === this.o.todayBtn ? null : 'view')),
                    o.hasClass('clear') && this.clearDates(),
                    o.hasClass('disabled') ||
                        ((o.hasClass('month') || o.hasClass('year') || o.hasClass('decade') || o.hasClass('century')) &&
                            (this.viewDate.setUTCDate(1),
                            1,
                            1 === this.viewMode
                                ? ((s = o.parent().find('span').index(o)),
                                  (i = this.viewDate.getUTCFullYear()),
                                  this.viewDate.setUTCMonth(s))
                                : ((s = 0), (i = Number(o.text())), this.viewDate.setUTCFullYear(i)),
                            this._trigger(m.viewModes[this.viewMode - 1].e, this.viewDate),
                            this.viewMode === this.o.minViewMode
                                ? this._setDate(n(i, s, 1))
                                : (this.setViewMode(this.viewMode - 1), this.fill()))),
                    this.picker.is(':visible') && this._focused_from && this._focused_from.focus(),
                    delete this._focused_from;
            },
            dayCellClick: function (e) {
                var n = t(e.currentTarget).data('date'),
                    a = new Date(n);
                this.o.updateViewDate &&
                    (a.getUTCFullYear() !== this.viewDate.getUTCFullYear() &&
                        this._trigger('changeYear', this.viewDate),
                    a.getUTCMonth() !== this.viewDate.getUTCMonth() && this._trigger('changeMonth', this.viewDate)),
                    this._setDate(a);
            },
            navArrowsClick: function (e) {
                var n = t(e.currentTarget).hasClass('prev') ? -1 : 1;
                0 !== this.viewMode && (n *= 12 * m.viewModes[this.viewMode].navStep),
                    (this.viewDate = this.moveMonth(this.viewDate, n)),
                    this._trigger(m.viewModes[this.viewMode].e, this.viewDate),
                    this.fill();
            },
            _toggle_multidate: function (t) {
                var e = this.dates.contains(t);
                if (
                    (t || this.dates.clear(),
                    -1 !== e
                        ? (!0 === this.o.multidate || this.o.multidate > 1 || this.o.toggleActive) &&
                          this.dates.remove(e)
                        : !1 === this.o.multidate
                        ? (this.dates.clear(), this.dates.push(t))
                        : this.dates.push(t),
                    'number' == typeof this.o.multidate)
                )
                    for (; this.dates.length > this.o.multidate; ) this.dates.remove(0);
            },
            _setDate: function (t, e) {
                (e && 'date' !== e) || this._toggle_multidate(t && new Date(t)),
                    ((!e && this.o.updateViewDate) || 'view' === e) && (this.viewDate = t && new Date(t)),
                    this.fill(),
                    this.setValue(),
                    (e && 'view' === e) || this._trigger('changeDate'),
                    this.inputField.trigger('change'),
                    !this.o.autoclose || (e && 'date' !== e) || this.hide();
            },
            moveDay: function (t, e) {
                var n = new Date(t);
                return n.setUTCDate(t.getUTCDate() + e), n;
            },
            moveWeek: function (t, e) {
                return this.moveDay(t, 7 * e);
            },
            moveMonth: function (t, e) {
                if (
                    !(function (t) {
                        return t && !isNaN(t.getTime());
                    })(t)
                )
                    return this.o.defaultViewDate;
                if (!e) return t;
                var n,
                    a,
                    o = new Date(t.valueOf()),
                    i = o.getUTCDate(),
                    s = o.getUTCMonth(),
                    l = Math.abs(e);
                if (((e = e > 0 ? 1 : -1), 1 === l))
                    (a =
                        -1 === e
                            ? function () {
                                  return o.getUTCMonth() === s;
                              }
                            : function () {
                                  return o.getUTCMonth() !== n;
                              }),
                        (n = s + e),
                        o.setUTCMonth(n),
                        (n = (n + 12) % 12);
                else {
                    for (var r = 0; r < l; r++) o = this.moveMonth(o, e);
                    (n = o.getUTCMonth()),
                        o.setUTCDate(i),
                        (a = function () {
                            return n !== o.getUTCMonth();
                        });
                }
                for (; a(); ) o.setUTCDate(--i), o.setUTCMonth(n);
                return o;
            },
            moveYear: function (t, e) {
                return this.moveMonth(t, 12 * e);
            },
            moveAvailableDate: function (t, e, n) {
                do {
                    if (((t = this[n](t, e)), !this.dateWithinRange(t))) return !1;
                    n = 'moveDay';
                } while (this.dateIsDisabled(t));
                return t;
            },
            weekOfDateIsDisabled: function (e) {
                return -1 !== t.inArray(e.getUTCDay(), this.o.daysOfWeekDisabled);
            },
            dateIsDisabled: function (e) {
                return (
                    this.weekOfDateIsDisabled(e) ||
                    t.grep(this.o.datesDisabled, function (t) {
                        return o(e, t);
                    }).length > 0
                );
            },
            dateWithinRange: function (t) {
                return t >= this.o.startDate && t <= this.o.endDate;
            },
            keydown: function (t) {
                if (this.picker.is(':visible')) {
                    var e,
                        n,
                        a = !1,
                        o = this.focusDate || this.viewDate;
                    switch (t.keyCode) {
                        case 27:
                            this.focusDate
                                ? ((this.focusDate = null),
                                  (this.viewDate = this.dates.get(-1) || this.viewDate),
                                  this.fill())
                                : this.hide(),
                                t.preventDefault(),
                                t.stopPropagation();
                            break;
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                            if (!this.o.keyboardNavigation || 7 === this.o.daysOfWeekDisabled.length) break;
                            (e = 37 === t.keyCode || 38 === t.keyCode ? -1 : 1),
                                0 === this.viewMode
                                    ? t.ctrlKey
                                        ? (n = this.moveAvailableDate(o, e, 'moveYear')) &&
                                          this._trigger('changeYear', this.viewDate)
                                        : t.shiftKey
                                        ? (n = this.moveAvailableDate(o, e, 'moveMonth')) &&
                                          this._trigger('changeMonth', this.viewDate)
                                        : 37 === t.keyCode || 39 === t.keyCode
                                        ? (n = this.moveAvailableDate(o, e, 'moveDay'))
                                        : this.weekOfDateIsDisabled(o) || (n = this.moveAvailableDate(o, e, 'moveWeek'))
                                    : 1 === this.viewMode
                                    ? ((38 !== t.keyCode && 40 !== t.keyCode) || (e *= 4),
                                      (n = this.moveAvailableDate(o, e, 'moveMonth')))
                                    : 2 === this.viewMode &&
                                      ((38 !== t.keyCode && 40 !== t.keyCode) || (e *= 4),
                                      (n = this.moveAvailableDate(o, e, 'moveYear'))),
                                n &&
                                    ((this.focusDate = this.viewDate = n),
                                    this.setValue(),
                                    this.fill(),
                                    t.preventDefault());
                            break;
                        case 13:
                            if (!this.o.forceParse) break;
                            (o = this.focusDate || this.dates.get(-1) || this.viewDate),
                                this.o.keyboardNavigation && (this._toggle_multidate(o), (a = !0)),
                                (this.focusDate = null),
                                (this.viewDate = this.dates.get(-1) || this.viewDate),
                                this.setValue(),
                                this.fill(),
                                this.picker.is(':visible') &&
                                    (t.preventDefault(), t.stopPropagation(), this.o.autoclose && this.hide());
                            break;
                        case 9:
                            (this.focusDate = null),
                                (this.viewDate = this.dates.get(-1) || this.viewDate),
                                this.fill(),
                                this.hide();
                    }
                    a &&
                        (this.dates.length ? this._trigger('changeDate') : this._trigger('clearDate'),
                        this.inputField.trigger('change'));
                } else (40 !== t.keyCode && 27 !== t.keyCode) || (this.show(), t.stopPropagation());
            },
            setViewMode: function (t) {
                (this.viewMode = t),
                    this.picker
                        .children('div')
                        .hide()
                        .filter('.datepicker-' + m.viewModes[this.viewMode].clsName)
                        .show(),
                    this.updateNavArrows(),
                    this._trigger('changeViewMode', new Date(this.viewDate));
            },
        };
        var d = function (e, n) {
            t.data(e, 'datepicker', this),
                (this.element = t(e)),
                (this.inputs = t.map(n.inputs, function (t) {
                    return t.jquery ? t[0] : t;
                })),
                delete n.inputs,
                (this.keepEmptyValues = n.keepEmptyValues),
                delete n.keepEmptyValues,
                h.call(t(this.inputs), n).on('changeDate', t.proxy(this.dateUpdated, this)),
                (this.pickers = t.map(this.inputs, function (e) {
                    return t.data(e, 'datepicker');
                })),
                this.updateDates();
        };
        d.prototype = {
            updateDates: function () {
                (this.dates = t.map(this.pickers, function (t) {
                    return t.getUTCDate();
                })),
                    this.updateRanges();
            },
            updateRanges: function () {
                var e = t.map(this.dates, function (t) {
                    return t.valueOf();
                });
                t.each(this.pickers, function (t, n) {
                    n.setRange(e);
                });
            },
            clearDates: function () {
                t.each(this.pickers, function (t, e) {
                    e.clearDates();
                });
            },
            dateUpdated: function (n) {
                if (!this.updating) {
                    this.updating = !0;
                    var a = t.data(n.target, 'datepicker');
                    if (a !== e) {
                        var o = a.getUTCDate(),
                            i = this.keepEmptyValues,
                            s = t.inArray(n.target, this.inputs),
                            l = s - 1,
                            r = s + 1,
                            d = this.inputs.length;
                        if (-1 !== s) {
                            if (
                                (t.each(this.pickers, function (t, e) {
                                    e.getUTCDate() || (e !== a && i) || e.setUTCDate(o);
                                }),
                                o < this.dates[l])
                            )
                                for (; l >= 0 && o < this.dates[l]; ) this.pickers[l--].setUTCDate(o);
                            else if (o > this.dates[r])
                                for (; r < d && o > this.dates[r]; ) this.pickers[r++].setUTCDate(o);
                            this.updateDates(), delete this.updating;
                        }
                    }
                }
            },
            destroy: function () {
                t.map(this.pickers, function (t) {
                    t.destroy();
                }),
                    t(this.inputs).off('changeDate', this.dateUpdated),
                    delete this.element.data().datepicker;
            },
            remove: i(
                'destroy',
                'Method `remove` is deprecated and will be removed in version 2.0. Use `destroy` instead'
            ),
        };
        var c = t.fn.datepicker,
            h = function (n) {
                var a,
                    o = Array.apply(null, arguments);
                if (
                    (o.shift(),
                    this.each(function () {
                        var e = t(this),
                            i = e.data('datepicker'),
                            l = 'object' == typeof n && n;
                        if (!i) {
                            var c = (function (e, n) {
                                    function a(t, e) {
                                        return e.toLowerCase();
                                    }
                                    var o = t(e).data(),
                                        i = {},
                                        s = new RegExp('^' + n.toLowerCase() + '([A-Z])');
                                    for (var l in ((n = new RegExp('^' + n.toLowerCase())), o))
                                        n.test(l) && (i[l.replace(s, a)] = o[l]);
                                    return i;
                                })(this, 'date'),
                                h = s(t.extend({}, u, c, l).language),
                                p = t.extend({}, u, h, c, l);
                            e.hasClass('input-daterange') || p.inputs
                                ? (t.extend(p, { inputs: p.inputs || e.find('input').toArray() }), (i = new d(this, p)))
                                : (i = new r(this, p)),
                                e.data('datepicker', i);
                        }
                        'string' == typeof n && 'function' == typeof i[n] && (a = i[n].apply(i, o));
                    }),
                    a === e || a instanceof r || a instanceof d)
                )
                    return this;
                if (this.length > 1)
                    throw new Error('Using only allowed for the collection of a single element (' + n + ' function)');
                return a;
            };
        t.fn.datepicker = h;
        var u = (t.fn.datepicker.defaults = {
                assumeNearbyYear: !1,
                autoclose: !1,
                beforeShowDay: t.noop,
                beforeShowMonth: t.noop,
                beforeShowYear: t.noop,
                beforeShowDecade: t.noop,
                beforeShowCentury: t.noop,
                calendarWeeks: !1,
                clearBtn: !1,
                toggleActive: !1,
                daysOfWeekDisabled: [],
                daysOfWeekHighlighted: [],
                datesDisabled: [],
                endDate: 1 / 0,
                forceParse: !0,
                format: 'mm/dd/yyyy',
                keepEmptyValues: !1,
                keyboardNavigation: !0,
                language: 'en',
                minViewMode: 0,
                maxViewMode: 4,
                multidate: !1,
                multidateSeparator: ',',
                orientation: 'auto',
                rtl: !1,
                startDate: -1 / 0,
                startView: 0,
                todayBtn: !1,
                todayHighlight: !1,
                updateViewDate: !0,
                weekStart: 0,
                disableTouchKeyboard: !1,
                enableOnReadonly: !0,
                showOnFocus: !0,
                zIndexOffset: 10,
                container: 'body',
                immediateUpdates: !1,
                title: '',
                templates: { leftArrow: '&#x00AB;', rightArrow: '&#x00BB;' },
                showWeekDays: !0,
            }),
            p = (t.fn.datepicker.locale_opts = ['format', 'rtl', 'weekStart']);
        t.fn.datepicker.Constructor = r;
        var f = (t.fn.datepicker.dates = {
                en: {
                    days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
                    daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
                    daysMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                    months: [
                        'January',
                        'February',
                        'March',
                        'April',
                        'May',
                        'June',
                        'July',
                        'August',
                        'September',
                        'October',
                        'November',
                        'December',
                    ],
                    monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                    today: 'Today',
                    clear: 'Clear',
                    titleFormat: 'MM yyyy',
                },
            }),
            m = {
                viewModes: [
                    { names: ['days', 'month'], clsName: 'days', e: 'changeMonth' },
                    { names: ['months', 'year'], clsName: 'months', e: 'changeYear', navStep: 1 },
                    { names: ['years', 'decade'], clsName: 'years', e: 'changeDecade', navStep: 10 },
                    { names: ['decades', 'century'], clsName: 'decades', e: 'changeCentury', navStep: 100 },
                    { names: ['centuries', 'millennium'], clsName: 'centuries', e: 'changeMillennium', navStep: 1e3 },
                ],
                validParts: /dd?|DD?|mm?|MM?|yy(?:yy)?/g,
                nonpunctuation: /[^ -\/:-@\u5e74\u6708\u65e5\[-`{-~\t\n\r]+/g,
                parseFormat: function (t) {
                    if ('function' == typeof t.toValue && 'function' == typeof t.toDisplay) return t;
                    var e = t.replace(this.validParts, '\0').split('\0'),
                        n = t.match(this.validParts);
                    if (!e || !e.length || !n || 0 === n.length) throw new Error('Invalid date format.');
                    return { separators: e, parts: n };
                },
                parseDate: function (n, o, i, s) {
                    function l() {
                        var t = this.slice(0, d[u].length),
                            e = d[u].slice(0, t.length);
                        return t.toLowerCase() === e.toLowerCase();
                    }
                    if (!n) return e;
                    if (n instanceof Date) return n;
                    if (('string' == typeof o && (o = m.parseFormat(o)), o.toValue)) return o.toValue(n, o, i);
                    var d,
                        c,
                        h,
                        u,
                        p,
                        g = { d: 'moveDay', m: 'moveMonth', w: 'moveWeek', y: 'moveYear' },
                        v = { yesterday: '-1d', today: '+0d', tomorrow: '+1d' };
                    if ((n in v && (n = v[n]), /^[\-+]\d+[dmwy]([\s,]+[\-+]\d+[dmwy])*$/i.test(n))) {
                        for (d = n.match(/([\-+]\d+)([dmwy])/gi), n = new Date(), u = 0; u < d.length; u++)
                            (c = d[u].match(/([\-+]\d+)([dmwy])/i)),
                                (h = Number(c[1])),
                                (p = g[c[2].toLowerCase()]),
                                (n = r.prototype[p](n, h));
                        return r.prototype._zero_utc_time(n);
                    }
                    d = (n && n.match(this.nonpunctuation)) || [];
                    var y,
                        b,
                        x = {},
                        D = ['yyyy', 'yy', 'M', 'MM', 'm', 'mm', 'd', 'dd'],
                        $ = {
                            yyyy: function (t, e) {
                                return t.setUTCFullYear(
                                    s
                                        ? (function (t, e) {
                                              return (
                                                  !0 === e && (e = 10),
                                                  t < 100 && (t += 2e3) > new Date().getFullYear() + e && (t -= 100),
                                                  t
                                              );
                                          })(e, s)
                                        : e
                                );
                            },
                            m: function (t, e) {
                                if (isNaN(t)) return t;
                                for (e -= 1; e < 0; ) e += 12;
                                for (e %= 12, t.setUTCMonth(e); t.getUTCMonth() !== e; )
                                    t.setUTCDate(t.getUTCDate() - 1);
                                return t;
                            },
                            d: function (t, e) {
                                return t.setUTCDate(e);
                            },
                        };
                    ($.yy = $.yyyy), ($.M = $.MM = $.mm = $.m), ($.dd = $.d), (n = a());
                    var _ = o.parts.slice();
                    if (
                        (d.length !== _.length &&
                            (_ = t(_)
                                .filter(function (e, n) {
                                    return -1 !== t.inArray(n, D);
                                })
                                .toArray()),
                        d.length === _.length)
                    ) {
                        var k, w, T;
                        for (u = 0, k = _.length; u < k; u++) {
                            if (((y = parseInt(d[u], 10)), (c = _[u]), isNaN(y)))
                                switch (c) {
                                    case 'MM':
                                        (b = t(f[i].months).filter(l)), (y = t.inArray(b[0], f[i].months) + 1);
                                        break;
                                    case 'M':
                                        (b = t(f[i].monthsShort).filter(l)),
                                            (y = t.inArray(b[0], f[i].monthsShort) + 1);
                                }
                            x[c] = y;
                        }
                        for (u = 0; u < D.length; u++)
                            (T = D[u]) in x && !isNaN(x[T]) && ((w = new Date(n)), $[T](w, x[T]), isNaN(w) || (n = w));
                    }
                    return n;
                },
                formatDate: function (e, n, a) {
                    if (!e) return '';
                    if (('string' == typeof n && (n = m.parseFormat(n)), n.toDisplay)) return n.toDisplay(e, n, a);
                    var o = {
                        d: e.getUTCDate(),
                        D: f[a].daysShort[e.getUTCDay()],
                        DD: f[a].days[e.getUTCDay()],
                        m: e.getUTCMonth() + 1,
                        M: f[a].monthsShort[e.getUTCMonth()],
                        MM: f[a].months[e.getUTCMonth()],
                        yy: e.getUTCFullYear().toString().substring(2),
                        yyyy: e.getUTCFullYear(),
                    };
                    (o.dd = (o.d < 10 ? '0' : '') + o.d), (o.mm = (o.m < 10 ? '0' : '') + o.m), (e = []);
                    for (var i = t.extend([], n.separators), s = 0, l = n.parts.length; s <= l; s++)
                        i.length && e.push(i.shift()), e.push(o[n.parts[s]]);
                    return e.join('');
                },
                headTemplate:
                    '<thead><tr><th colspan="7" class="datepicker-title"></th></tr><tr><th class="prev">' +
                    u.templates.leftArrow +
                    '</th><th colspan="5" class="datepicker-switch"></th><th class="next">' +
                    u.templates.rightArrow +
                    '</th></tr></thead>',
                contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>',
                footTemplate:
                    '<tfoot><tr><th colspan="7" class="today"></th></tr><tr><th colspan="7" class="clear"></th></tr></tfoot>',
            };
        (m.template =
            '<div class="datepicker"><div class="datepicker-days"><table class="table-condensed">' +
            m.headTemplate +
            '<tbody></tbody>' +
            m.footTemplate +
            '</table></div><div class="datepicker-months"><table class="table-condensed">' +
            m.headTemplate +
            m.contTemplate +
            m.footTemplate +
            '</table></div><div class="datepicker-years"><table class="table-condensed">' +
            m.headTemplate +
            m.contTemplate +
            m.footTemplate +
            '</table></div><div class="datepicker-decades"><table class="table-condensed">' +
            m.headTemplate +
            m.contTemplate +
            m.footTemplate +
            '</table></div><div class="datepicker-centuries"><table class="table-condensed">' +
            m.headTemplate +
            m.contTemplate +
            m.footTemplate +
            '</table></div></div>'),
            (t.fn.datepicker.DPGlobal = m),
            (t.fn.datepicker.noConflict = function () {
                return (t.fn.datepicker = c), this;
            }),
            (t.fn.datepicker.version = '1.9.0'),
            (t.fn.datepicker.deprecated = function (t) {
                var e = window.console;
                e && e.warn && e.warn('DEPRECATED: ' + t);
            }),
            t(document).on(
                'focus.datepicker.data-api click.datepicker.data-api',
                '[data-provide="datepicker"]',
                function (e) {
                    var n = t(this);
                    n.data('datepicker') || (e.preventDefault(), h.call(n, 'show'));
                }
            ),
            t(function () {
                h.call(t('[data-provide="datepicker-inline"]'));
            });
    });
let checked = 0,
    radio_number_length = 0,
    li_number = 0;
const FUNC = {
        ajax_load_more: function (t, e) {
            return (
                $.ajax({
                    url: e,
                    type: 'POST',
                    dateType: 'html',
                    beforeSend: function () {
                        t.append('<i class="fa fa-spinner fa-spin text-danger"></i>');
                    },
                    success: function (e) {
                        t.find('i').remove();
                        let n = $(e).find('#ajax_content').html();
                        n && (t.children('svg').remove(), t.parent().children('#ajax_content').append(n));
                    },
                }),
                !1
            );
        },
        ajax_load_data: function (t, e, n) {
            return (
                $.ajax({
                    url: e,
                    type: 'POST',
                    data: n,
                    dateType: 'html',
                    beforeSend: function () {
                        t.html('<div class="text-center"><i class="icon icon-loading123"></i></div>');
                    },
                    success: function (e) {
                        $(t).html(e);
                    },
                }),
                !1
            );
        },
    },
    RESULT_FOOT = {
        event_click_radio_digit: function () {
            $(document).on('click', "table > tfoot [type='radio']", function () {
                let t = $(this).closest('table'),
                    e = $(this).val();
                t.find('tr:not(:first-child) > td > span.text-number').each(function (t, n) {
                    let a = $(n);
                    if (0 == a.children('.fa-pulse').length) {
                        let t = a.text().trim();
                        if (0 == e) a.text(t);
                        else {
                            let n = t.substring(0, t.length - e),
                                o = t.replace(n, '<number class="d-none">' + n + '</number>');
                            a.html(o);
                        }
                    }
                });
            });
        },
        event_click_filter_number: function () {
            $(document).on('click', '.check-number ul > li', function () {
                let t = $(this);
                t.closest('td').find('.check-radio input[value=0]').trigger('click'),
                    t.parent().find('li').removeClass('active');
                let e = t.closest('article').find('.result table');
                if (t.text() === li_number) {
                    (li_number = 0),
                        e.find('tr > td > span').each(function (t, e) {
                            let n = $(e);
                            n.html(n.text());
                        });
                } else {
                    t.addClass('active');
                    let n = (li_number = t.text());
                    e.find('tr > td > span').each(function (t, e) {
                        let a = $(e);
                        if (0 === a.children('.fa-pulse').length) {
                            let t = a.text().trim(),
                                e = t.substr(t.length - 2, 2),
                                o = t.slice(0, t.length - 2);
                            if ((a.find('number').remove(), 0 === checked)) {
                                if ((a.text(t), -1 !== e.indexOf(n))) {
                                    let t = o + '<number class="numberTail">' + e + '</number>';
                                    a.html(t);
                                }
                            } else {
                                let i = t;
                                -1 !== e.indexOf(n) && (i = o + '<number class="numberHead">' + e + '</number>');
                                let s = t.length - checked,
                                    l = t.substring(0, s);
                                (i = i.replace(l, '<number style="display: none;">' + l + '</number>')), a.html(i);
                            }
                        }
                    });
                }
            });
        },
        init: function () {
            this.event_click_radio_digit(), this.event_click_filter_number();
        },
    },
    AJAX_RESULT = {
        load_more: function () {
            $(document).on('click', 'button.btnLoadMore', function (t) {
                t.preventDefault();
                let e = $(this),
                    n = e.data('total'),
                    a = e.data('limit'),
                    o = parseInt(e.attr('data-page'));
                n < o * a && e.attr('hidden', 'true');
                let i = e.data('url') + o;
                e.attr('data-page', o + 1), FUNC.ajax_load_more(e, i);
            });
        },
        load_loto: function (t, e, n) {
            let a = n.substr(n.length - 2),
                o = a.substr(0, 1),
                i = a.substr(1, 1),
                s = parseInt(o) + 1;
            if (
                (0 == isNaN(s) &&
                    t
                        .find('tbody > tr:nth-child(' + s + ') > td:nth-child(' + e + ')')
                        .append('<span>' + i + '</span>'),
                t.hasClass('table-xslt-single-col') && i >= 0)
            ) {
                let n = parseInt(i) + 1;
                (e = 4),
                    t
                        .find('tbody > tr:nth-child(' + n + ') > td:nth-child(' + e + ')')
                        .append('<span>' + o + '</span>');
            }
        },
        clear_loto: function (t) {
            t.find('tbody > tr > td > span').remove();
        },
        socket_live: function () {
            let t = new Date().getHours();
            if (t >= 17 && t < 19) {
                $.ajax({
                    url: base_url + 'result/ajax_live',
                    data: null,
                    type: 'post',
                    dataType: 'json',
                    success: function (t) {
                        AJAX_RESULT.push(t);
                    },
                });
                let t = ['https://live.ketqua247.com', 'https://live1.ketqua247.com', 'https://live3.ketqua247.com'],
                    e = io(t[Math.floor(Math.random() * t.length)], { secure: !0 }),
                    n = localStorage.getItem('xslive');
                if (null !== n) {
                    AJAX_RESULT.push(JSON.parse(n)),
                        -1 == n.search(/\\"\\"/gm) ? NOTI_LIVE.hide() : NOTI_LIVE.loadNoti();
                }
                e.on('data', (t) => {
                    localStorage.setItem('xslive', JSON.stringify(t)), AJAX_RESULT.push(t);
                });
            } else localStorage.removeItem('xslive');
        },
        push: function (t) {
            let e = new Date(),
                n = e.getHours(),
                a = e.getMinutes(),
                o = 0;
            if (a >= 13) {
                let e = $('.table-result .text-number > .fa-spinner'),
                    n = $('.table-result .text-number > span');
                if (e.length > 0 || n.length > 0) {
                    if ('' !== $('.table-result').data('code')) {
                        let a = e.closest('article');
                        0 === e.length && n.length > 0 && (a = n.closest('article'));
                        let i = a.find('table.table-result'),
                            s = i.data('code');
                        if (-1 === $.inArray(s, ['XSMN', 'XSMT'])) {
                            let n = a.find('table.table-xslt-single-col');
                            AJAX_RESULT.clear_loto(n),
                                void 0 !== t[s] &&
                                    $.each(t[s], function (t, a) {
                                        let l = JSON.parse(a.data_result);
                                        $.each(l, function (t, a) {
                                            (t += 1),
                                                $.each(a, function (a, l) {
                                                    a += 1;
                                                    let r = i.find(
                                                        'tbody > tr:nth-child(' +
                                                            t +
                                                            ') > td > span.text-number:nth-child(' +
                                                            a +
                                                            ')'
                                                    );
                                                    if (l.length > 0)
                                                        r.text(l), AJAX_RESULT.load_loto(n, 2, l), (o = 0);
                                                    else {
                                                        let n = $(
                                                            '.table-result  > tbody td > span.text-number > span'
                                                        );
                                                        0 == o &&
                                                            ('XSMB' == s
                                                                ? e.length <= 4
                                                                    ? 2 == t &&
                                                                      0 == n.length &&
                                                                      (r.html('<span class="loadNumber"></span>'),
                                                                      (o = 1))
                                                                    : t > 2 &&
                                                                      0 == n.length &&
                                                                      (r.html('<span class="loadNumber"></span>'),
                                                                      (o = 1))
                                                                : 0 == n.length &&
                                                                  (r.html('<span class="loadNumber"></span>'),
                                                                  (o = 1)));
                                                    }
                                                });
                                        });
                                    });
                        } else {
                            let e = a.find('table.table-xslt-multi-col[data-code="' + s + '"]');
                            (i = a.find('table.table-result[data-code="' + s + '"]')), AJAX_RESULT.clear_loto(e);
                            let n = 2;
                            void 0 !== t[s] &&
                                $.each(t[s], function (t, a) {
                                    let o = JSON.parse(a[0].data_result);
                                    $.each(o, function (t, a) {
                                        (t += 2),
                                            $.each(a, function (a, o) {
                                                a += 1;
                                                let s = i.find(
                                                    'tbody > tr:nth-child(' +
                                                        t +
                                                        ') > td:nth-child(' +
                                                        n +
                                                        ') > span.text-number:nth-child(' +
                                                        a +
                                                        ')'
                                                );
                                                if (o.length > 0) s.text(o), AJAX_RESULT.load_loto(e, n, o);
                                                else {
                                                    0 ==
                                                        i.find('td:nth-child(' + n + ') > span.text-number > span')
                                                            .length && s.html('<span class="loadNumber"></span>');
                                                }
                                            });
                                    }),
                                        n++;
                                });
                        }
                    }
                }
            }
            let i = { 18: 'XSMB', 17: 'XSMT', 16: 'XSMN' }[n],
                s = '';
            if (void 0 !== t[i])
                if (18 != n) {
                    $.each(t[i], function (t, e) {
                        s += e[0].data_result;
                    }),
                        -1 == s.search('\\"\\"') ? NOTI_LIVE.hide() : NOTI_LIVE.loadNoti();
                } else {
                    -1 == (s += t[i][0].data_result).search('""') ? NOTI_LIVE.hide() : NOTI_LIVE.loadNoti();
                }
        },
        init: function () {
            NOTI_LIVE.loadNoti(), this.socket_live(), this.load_more();
        },
    },
    NOTI_LIVE = {
        timeEndCount: 13,
        timeEndLive: 35,
        hourLive: [17, 18],
        loadNoti: function () {
            let t = new Date(),
                e = t.getHours(),
                n = t.getMinutes();
            0 == $('#notiLive').length &&
                0 == $('table .fa-spinner').length &&
                $.inArray(e, this.hourLive) >= 0 &&
                n <= this.timeEndLive &&
                ($('main').prepend("<div id='notiLive'></div>"),
                $('#notiLive').load(base_url + 'application/views/public/default/_block/_live.html'));
        },
        hide: function () {
            if (0 == $('#notiLive').length) {
                let t = setInterval(function () {
                    $('#notiLive').length > 0 && ($('#notiLive').remove(), clearInterval(t));
                }, 500);
            } else $('#notiLive').remove();
        },
        countDown: function () {
            let t = setInterval(function () {
                if ($('#oclock').length > 0) {
                    let e = new Date(),
                        n = e.getTime();
                    e.setMinutes(this.timeEndCount), e.setSeconds(0);
                    let a = (e.getTime() - n) / 1e3;
                    a = parseInt(a);
                    let o = setInterval(function () {
                        if (a > 0) {
                            a = Math.round(a);
                            let t = parseInt(a / 60),
                                e = a % 60;
                            $('#oclock').html('Còn ' + t + ':' + e), a--;
                        } else $('#oclock').remove(), clearInterval(o);
                    }, 1e3);
                    clearInterval(t);
                }
            }, 500);
        },
    },
    LOAD_NUMBER = {
        random_number: function (t) {
            let e = '';
            for (let n = 1; n <= t; n++) {
                e += '<strong>' + Math.floor(10 * Math.random()) + '</strong>';
            }
            return e;
        },
        format_number: function (t) {
            let e = t.replace(/<\/strong>/g, '');
            return (e = e.replace(/<strong>/g, ''));
        },
        load_number: function () {
            setInterval(function () {
                let t = $('.table-result  > tbody td > span.text-number > span');
                t.length > 0 &&
                    t.each(function () {
                        let t = $(this).parent().attr('nc'),
                            e = LOAD_NUMBER.random_number(t);
                        $(this).html(e);
                    });
            }, 100);
        },
        check_time: function () {
            let t = $('.table-result  > tbody td > span.text-number > .fa-pulse').closest('article'),
                e = t.find('table.table-result');
            if (t.find('table.table-result-multi-col').length > 0)
                for (let t = 2; t <= 5; t++) {
                    let n = e.find('td:nth-child(' + t + ') > span.text-number > span');
                    0 === n.length &&
                        $('td:nth-child(' + t + ') > span.text-number').each(function () {
                            if (
                                ((n = e.find('td:nth-child(' + t + ') > span.text-number > span')),
                                1 === $(this).find('.fa-pulse').length && 0 === n.length)
                            )
                                return $(this).html(' <span class="loadNumber"></span>'), !1;
                        });
                }
            else {
                if ('XSMB' === e.data('code')) {
                    let t = e.find('td:nth-child(2) > span.text-number'),
                        n = e.find('td:nth-child(2) > span.text-number > .fa-pulse');
                    $(t).each(function (t) {
                        if (n.length > 4 && t > 3) {
                            if (1 === $(this).find('.fa-pulse').length)
                                return $(this).html(' <span class="loadNumber"></span>'), !1;
                        }
                    });
                } else {
                    let t = e.find('td:nth-child(2) > span.text-number');
                    $(t).each(function () {
                        if (1 === $(this).find('.fa-pulse').length)
                            return $(this).html('  <span class="loadNumber"></span>'), !1;
                    });
                }
            }
        },
        check_load_number: function () {
            let t = new Date(),
                e = t.getMinutes();
            if (e <= 13) {
                let n = 0,
                    a = setInterval(function () {
                        (n += 1),
                            (t = new Date()),
                            13 === (e = t.getMinutes()) && (LOAD_NUMBER.check_time(), clearInterval(a));
                    }, 1e3);
            } else LOAD_NUMBER.check_time();
        },
        init: function () {
            this.load_number();
        },
    };
let DELAY = (function () {
    var t = [];
    return function (e, n) {
        t.push({ delay: e, callBack: n }),
            1 === t.length &&
                (function e() {
                    t.length > 0 &&
                        setTimeout(function () {
                            t.shift().callBack(), e();
                        }, t[0].delay);
                })();
    };
})();
const LOAD_SPIN = {
        btnSpin: $('.btn.btn_spin'),
        tableSpin: $('table.table-result-spin'),
        tableLoto: $('table.spin-loto'),
        iconSpin: '<i class="fas fa-spinner fa-pulse"></i>',
        rewardMB: function (t) {
            let e, n;
            switch (t) {
                case 0:
                case 1:
                case 2:
                case 3:
                    (e = 1e4), (n = 99999);
                    break;
                case 4:
                case 5:
                    (e = 1e3), (n = 9999);
                    break;
                case 6:
                    (e = 100), (n = 999);
                    break;
                default:
                    (e = 10), (n = 99);
            }
            return [e, n];
        },
        rewardMN: function (t) {
            let e, n;
            switch (t) {
                case 0:
                    (e = 10), (n = 99);
                    break;
                case 1:
                    (e = 100), (n = 999);
                    break;
                case 2:
                case 3:
                    (e = 1e3), (n = 9999);
                    break;
                case 4:
                case 5:
                case 6:
                case 7:
                    (e = 1e4), (n = 99999);
                    break;
                default:
                    (e = 1e5), (n = 999999);
            }
            return [e, n];
        },
        random_number: function (t, e, n, a, o) {
            let i,
                s = 0,
                l = setInterval(function () {
                    if (s < 10) {
                        s++;
                        let t = $(n).attr('nc'),
                            e = LOAD_NUMBER.random_number(t);
                        n.find('span').html(e);
                    } else clearInterval(l), (i = n.find('span').text()), n.html(i), LOAD_SPIN.show_loto(a, o, i);
                }, 100);
        },
        show_loto: function (t, e, n) {
            let a = n.substr(n.length - 2),
                o = a.substr(0, 1),
                i = a.substr(1, 1),
                s = parseInt(o) + 1;
            t.find('tbody > tr:nth-child(' + s + ') > td:nth-child(' + e + ')').append('<span>' + i + '</span>'),
                t.closest('.loto-single').length > 0 &&
                    ((s = parseInt(i) + 1),
                    (e = 4),
                    t
                        .find('tbody > tr:nth-child(' + s + ') > td:nth-child(' + e + ')')
                        .append('<span>' + o + '</span>')),
                LOAD_SPIN.done();
        },
        show_result_MB: function (t, e, n) {
            this.resetTable(),
                t.find('tbody > tr' + n).each(function (t, a) {
                    ':not(:nth-child(-n+2))' === n && (t += 1);
                    let o = LOAD_SPIN.rewardMB(t);
                    if (
                        ($(this)
                            .find('td')
                            .each(function (t, n) {
                                $(this)
                                    .find('span')
                                    .each(function (n, a) {
                                        let i = $(this);
                                        DELAY(
                                            2e3,
                                            (function (t, n) {
                                                return function () {
                                                    let n = t + 1;
                                                    i.html('<span class="loadNumber"></span>'),
                                                        LOAD_SPIN.random_number(o[0], o[1], i, e, n);
                                                };
                                            })(t)
                                        );
                                    });
                            }),
                        ':not(:first-child)' === n)
                    )
                        return !1;
                });
        },
        show_result_MN: function (t, e, n) {
            let a = $('.random_mt_mn').find('span').length;
            this.resetTable(),
                t.find('tbody > tr' + n).each(function (t, o) {
                    ':not(:first-child)' === n && a <= 18 && (t += 1);
                    let i = LOAD_SPIN.rewardMN(t);
                    $(this)
                        .find('td')
                        .each(function (t, n) {
                            $(this)
                                .find('span')
                                .each(function (n, a) {
                                    let o = $(this);
                                    DELAY(
                                        2e3,
                                        (function (t, n) {
                                            return function () {
                                                let n = t + 1;
                                                o.html('<span class="loadNumber"></span>'),
                                                    LOAD_SPIN.random_number(i[0], i[1], o, e, n);
                                            };
                                        })(t)
                                    );
                                });
                        });
                });
        },
        init: function () {
            if (
                ('single' == site &&
                    $('button.btn_spin').click(function (t) {
                        t.preventDefault(),
                            LOAD_SPIN.btnSpin.attr('disabled', !0),
                            LOAD_SPIN.show_result_MB(
                                LOAD_SPIN.tableSpin,
                                LOAD_SPIN.tableLoto,
                                ':not(:nth-child(-n+2))'
                            ),
                            LOAD_SPIN.show_result_MB(LOAD_SPIN.tableSpin, LOAD_SPIN.tableLoto, ':not(:first-child)');
                    }),
                'multi' == site)
            ) {
                let t = $('.random_mt_mn').find('span').length;
                $('button.btn_spin').click(function (e) {
                    e.preventDefault(),
                        $(this).attr('disabled', !0),
                        t <= 18 && LOAD_SPIN.show_result_MN(LOAD_SPIN.tableSpin, LOAD_SPIN.tableLoto, ':first-child'),
                        LOAD_SPIN.show_result_MN(LOAD_SPIN.tableSpin, LOAD_SPIN.tableLoto, ':not(:first-child)');
                });
            }
        },
        done: function () {
            0 == $('table.table-result-spin .fa-spinner').length && LOAD_SPIN.btnSpin.prop('disabled', !1);
        },
        resetTable: function () {
            this.tableSpin.find('.text-number').html(this.iconSpin), this.tableLoto.find('td > span').remove();
        },
    },
    SPIN_RESULT = {
        selectOption: function () {
            $('select.selected').change(function () {
                window.location.href = $(this).val();
            });
        },
        init: function () {
            SPIN_RESULT.selectOption(),
                $(document).on('click', '#list_region', function () {
                    $('.spin-select > select:nth(0)').removeClass('d-none'),
                        (window.location.href = $('.spin-select > select:nth(0)').val()),
                        $('.spin-select > select:nth(1)').addClass('d-none');
                }),
                $(document).on('click', '#list_province', function () {
                    $('.spin-select > select:nth(0)').addClass('d-none'),
                        $('.spin-select > select:nth(1)').removeClass('d-none'),
                        (window.location.href = $('.spin-select > select:nth(1)').val());
                });
        },
    },
    STATISTIC = {
        changeSelected: function () {
            $('#selectProvince').length > 0 &&
                $(document).on(
                    {
                        change: function () {
                            window.location.href = $(this).val();
                        },
                    },
                    '#selectProvince'
                );
        },
        search_checked: function () {
            let t = window.location.href,
                e = $('#selectProvince optgroup option');
            $.each(e, function (e, n) {
                t == $(this).val() && $(this).attr('selected', 'selected');
            });
            let n = $('#selectProvince option');
            $.each(n, function (e, n) {
                t == $(this).val() && $(this).attr('selected', 'selected');
            });
        },
        DBW_inputChecked: function () {
            let t = $('.checkbox-dbtuan input');
            t.length > 0 &&
                t.click(function () {
                    $.each(t, function (t, e) {
                        $(e).prop('checked')
                            ? $('.tbl_' + $(e).attr('id')).addClass('d-block')
                            : $('.tbl_' + $(e).attr('id')).removeClass('d-block');
                    });
                });
            let e = $('.checkbox-radiox23 input');
            e.length > 0 &&
                e.click(function () {
                    let t = $(this).attr('data-id');
                    $('#view_data article').addClass('d-none'), $('#' + t).removeClass('d-none');
                });
            let n = $('.check-radio-skq input');
            n.length > 0 &&
                n.click(function () {
                    let t = $(this).val();
                    1 == t
                        ? ($('.table-flex-border').css('display', 'block'), $('.loto').css('display', 'block'))
                        : 2 == t
                        ? ($('.table-flex-border').css('display', 'block'), $('.loto').css('display', 'none'))
                        : 3 == t &&
                          ($('.table-flex-border').css('display', 'none'), $('.loto').css('display', 'block'));
                });
        },
        DBM_show_digits: function () {
            $(document).on('click', '.checkbox-dbthang input', function () {
                $('#full_number:checked').length > 0 && $('.result_td span[hidden]').removeAttr('hidden'),
                    $('#two_number:checked').length > 0 && $('.result_td span:first-child').attr('hidden', 'hidden');
            });
        },
        searchForm: function () {
            $(document).on('click', '#btn-minus', function (t) {
                t.preventDefault();
                let e,
                    n = $(this).closest('.form-search'),
                    a = n.find('#range-day').attr('min');
                'undefined' === a && (a = 1),
                    n.find('#range-day').length > 0 &&
                        ((e = n.find('#range-day').val()) > a
                            ? n.find('#range-day').val(e - 1)
                            : $('input[name="so_cau"]').length > 0
                            ? toastr.warning('Số ngày chạy cầu bạn vừa chọn không có cầu nào')
                            : toastr.warning('Khoảng ngày phải lớn hơn 1'));
            }),
                $(document).on('click', '#btn-plus', function (t) {
                    t.preventDefault();
                    let e,
                        n = $(this).closest('.form-search'),
                        a = n.find('#range-day').attr('max');
                    void 0 === a && (a = 99),
                        n.find('#range-day').length > 0 &&
                            ((e = n.find('#range-day').val()) < a
                                ? n.find('#range-day').val(parseInt(e) + parseInt(1))
                                : $('input[name="so_cau"]').length > 0
                                ? toastr.warning('Số ngày chạy cầu bạn vừa chọn không có cầu nào')
                                : toastr.warning('Khoảng ngày phải nhỏ hơn 99'));
                }),
                $(document).on('click', '#btn-Statistic-search', function (t) {
                    let e, n, a, o, i, s, l, r;
                    t.preventDefault();
                    let d = $(this).closest('.form-search'),
                        c = $(this).data('url');
                    if (
                        (d.find('#selectProvince').length > 0 &&
                            (e = d.find('#selectProvince').find(':selected').data('code')),
                        d.find('#selectCode').length > 0 && (e = d.find('#selectCode').find(':selected').data('code')),
                        d.find('#range-day').length > 0 &&
                            (null == (n = d.find('#range-day').val()) &&
                                (n = d.find('#select-dow').find(':selected').val()),
                            $('#rangeday_value').html(n)),
                        d.find('#select-dow').length > 0 && (l = d.find('#select-dow').find(':selected').val()),
                        d.find('#dateEnd').length > 0 && (a = d.find('#dateEnd').val()),
                        d.find('#dateBegin').length > 0 && (o = d.find('#dateBegin').val()),
                        d.find('#selectDate').length > 0 && (i = d.find('#selectDate').find(':selected').val()),
                        d.find('#selectMonth').length > 0 && (s = d.find('#selectMonth').find(':selected').val()),
                        d.find('#is_special').length > 0 && (r = d.find('#is_special:checked').length),
                        d.find('.mutliSelect').length > 0)
                    ) {
                        let t = $('.mutliSelect input');
                        (i = []),
                            $.each(t, function (t, e) {
                                $(e).prop('checked') && i.push($(e).val());
                            });
                    }
                    let h = $('#view_data');
                    FUNC.ajax_load_data(h, '/statistic/' + c, {
                        code: e,
                        rangeday: n,
                        dow: l,
                        date_begin: o,
                        date_end: a,
                        year: i,
                        month: s,
                        is_special: r,
                    });
                }),
                $(document).on('click', '.btn-search-skq', function (t) {
                    let e, n;
                    t.preventDefault();
                    let a = $(this).closest('.form-search'),
                        o = $(this).data('url');
                    a.find('#dateBegin').length > 0 && (e = a.find('#dateBegin').val()),
                        a.find('#dateEnd').length > 0 && (n = a.find('#dateEnd').val());
                    let i = $('.btn-search-skq').parent();
                    $.ajax({
                        url: o,
                        type: 'POST',
                        dateType: 'html',
                        data: { date_begin: e, date_end: n },
                        beforeSend: function () {
                            i.addClass('mb-2'), i.html('<i class="fa fa-spinner fa-spin text-danger m-auto"></i>');
                        },
                        success: function (t) {
                            let e = $(t).find('#ajax_content').html();
                            e &&
                                ($('#ajax_content').html(e),
                                i.removeClass('mb-2'),
                                i.html(
                                    '<button data-url="" class="btn btn-danger btn-sm w-100 btnLogan btn-search-skq" type="submit">Xem kết quả</button>'
                                ));
                            let n = $('input[name="rd_skq"]:checked').val();
                            1 == n
                                ? ($('.table-flex-border').css('display', 'block'), $('.loto').css('display', 'block'))
                                : 2 == n
                                ? ($('.table-flex-border').css('display', 'block'), $('.loto').css('display', 'none'))
                                : 3 == n &&
                                  ($('.table-flex-border').css('display', 'none'), $('.loto').css('display', 'block')),
                                setTimeout(loadBanner, 500);
                        },
                    });
                });
        },
        change_select: function () {
            $(document).on('change', '#selectProvinc', function () {
                let t = $(this).val() - 1,
                    e = STATISTIC.ajax_load_province(idGetProvinc, t);
                (html = ''),
                    $.each(e, function (t, e) {
                        html +=
                            "<option data-code='" +
                            e.code +
                            "' value='" +
                            base_url +
                            'soi-cau-' +
                            e.code.toLowerCase() +
                            ".html'>" +
                            e.title +
                            '</option>';
                    }),
                    $('#selectProvince').html(html);
            }),
                $('#selectDOWThongKe').length > 0 &&
                    $(document).on('change', '#selectDOWThongKe', function () {
                        let t = $(this).val() - 1,
                            e = STATISTIC.ajax_load_province(2, t),
                            n = STATISTIC.ajax_load_province(3, t),
                            a = $.merge(e, n);
                        (html =
                            "<option data-code='xsmb' data-id='1' value='" +
                            base_url +
                            view +
                            "-xsmb.html'>Miền Bắc</option>"),
                            $.each(a, function (t, e) {
                                html +=
                                    "<option data-code='" +
                                    e.code.toLowerCase() +
                                    "' data-id='" +
                                    e.id +
                                    "' value='" +
                                    base_url +
                                    view +
                                    '-' +
                                    e.code.toLowerCase() +
                                    ".html'>" +
                                    e.title +
                                    '</option>';
                            }),
                            $('#selectProvince').html(html);
                    }),
                $(document).on('click', '#showSoiCau', function (t) {
                    t.preventDefault();
                    let e = $('#selectProvince').val().toLowerCase();
                    window.location.href = e;
                });
        },
        ajax_load_province: function (t, e) {
            let n = [];
            return (
                $.ajax({
                    url: base_url + 'soicau/ajax_load_provinc',
                    data: { id: t, dayOfWeek: e },
                    type: 'POST',
                    dataType: 'JSON',
                    async: !1,
                    success: function (t) {
                        n = t;
                    },
                    error: function (t) {
                        console.log(t);
                    },
                }),
                n
            );
        },
        init: function () {
            this.changeSelected(),
                this.search_checked(),
                this.DBW_inputChecked(),
                this.DBM_show_digits(),
                this.searchForm(),
                this.change_select();
        },
    },
    TAN_SUAT_LO_TO = {
        tk_top: function () {
            $(document).on('click', '.table-tansuat-loto #tk_top > button', function () {
                let t = $(this);
                t.parent().find('button').removeClass('active'),
                    t.closest('.table-tansuat-loto').find('tbody tr:last-child td button').removeClass('active'),
                    t.closest('.table-tansuat-loto').find('tbody tr td:last-child button').removeClass('active'),
                    t.addClass('active');
                let e = t.data('id');
                TAN_SUAT_LO_TO.action(e);
            }),
                $(document).on('click', '.table-tansuat-loto tbody tr:last-child td button', function () {
                    let t = $(this),
                        e = t.data('id'),
                        n = t.data('number'),
                        a = $('.table-tansuat-loto');
                    t.closest('.table-tansuat-loto').find('tbody tr:last-child td button').removeClass('active'),
                        t.closest('.table-tansuat-loto').find('tbody tr td:last-child button').removeClass('active'),
                        t.closest('.table-tansuat-loto').find('#tk_top > button').removeClass('active'),
                        t.closest('.table-tansuat-loto').find('#tk_top > button:first-child').addClass('active'),
                        t.addClass('active'),
                        TAN_SUAT_LO_TO.head_tail(e, n),
                        a.find('input').removeAttr('checked'),
                        a.find('input').parent().find('span.checkbox').removeClass('active'),
                        a.find('tbody tr td:nth-child(' + (n + 1) + ') span.checkbox').addClass('active');
                }),
                $(document).on('click', '.table-tansuat-loto tbody tr td:last-child button', function () {
                    let t = $(this),
                        e = t.data('id'),
                        n = t.data('number'),
                        a = $('.table-tansuat-loto');
                    t.closest('.table-tansuat-loto').find('tbody tr td:last-child button').removeClass('active'),
                        t.closest('.table-tansuat-loto').find('tbody tr:last-child td button').removeClass('active'),
                        t.closest('.table-tansuat-loto').find('#tk_top > button').removeClass('active'),
                        t.closest('.table-tansuat-loto').find('#tk_top > button:first-child').addClass('active'),
                        t.addClass('active'),
                        TAN_SUAT_LO_TO.head_tail(e, n),
                        a.find('input').removeAttr('checked'),
                        a.find('input').parent().find('span.checkbox').removeClass('active'),
                        t.closest('tr').find('span.checkbox').addClass('active');
                }),
                $(document).on('click', '.table-tansuat-loto tbody .check-radio', function () {
                    $('.table-tansuat-duoi-loto tbody tr').addClass('d-none'),
                        $('.table-tansuat-duoi-loto tbody').removeClass('d-none'),
                        $('.table-tansuat-loto tbody .check-radio input[type="checkbox"]:checked').each(function () {
                            let t = $(this).parent().attr('for').substr(-2, 2);
                            $('.table-tansuat-duoi-loto')
                                .find('tbody tr[number="' + t + '"]')
                                .removeClass('d-none');
                        });
                });
        },
        action: function (t) {
            let e = $('.table-tansuat-duoi-loto'),
                n = $('.table-tansuat-loto');
            e.find('tbody').removeClass('d-none'),
                e.find('tbody tr').removeClass('d-none'),
                n.find('input').removeAttr('checked'),
                n.find('input').parent().find('span.checkbox').addClass('active'),
                'all_none' === t &&
                    (e.find('tbody').addClass('d-none'),
                    n.find('input').removeAttr('checked'),
                    n.find('input').parent().find('span.checkbox').removeClass('active')),
                'only_even' === t &&
                    (e.find('tbody tr:odd').addClass('d-none'),
                    $.each(n.find('tbody .form-check'), function (t, e) {
                        parseInt($(e).find('.ml-2').html()) % 2 != 0 &&
                            ($(e).find('input').removeAttr('checked'),
                            $(e).find('span.checkbox').removeClass('active'));
                    })),
                'only_odd' === t &&
                    (e.find('tbody tr:even').addClass('d-none'),
                    $.each(n.find('tbody .form-check'), function (t, e) {
                        parseInt($(e).find('.ml-2').html()) % 2 == 0 &&
                            ($(e).find('input').removeAttr('checked'),
                            $(e).find('span.checkbox').removeClass('active'));
                    }));
        },
        head_tail: function (t, e) {
            let n = $('.table-tansuat-duoi-loto');
            n.find('tbody').removeClass('d-none'),
                n.find('tbody tr').removeClass('d-none'),
                'head' === t &&
                    $.each(n.find('tbody tr'), function (t, n) {
                        let a = $(n).attr('number-head');
                        parseInt(a) !== parseInt(e) && $(n).addClass('d-none');
                    }),
                'tail' === t &&
                    $.each(n.find('tbody tr'), function (t, a) {
                        $.each(n.find('tbody tr'), function (t, n) {
                            let a = $(n).attr('number-tail');
                            parseInt(a) !== parseInt(e) && $(n).addClass('d-none');
                        });
                    });
        },
        init: function () {
            TAN_SUAT_LO_TO.tk_top();
        },
    },
    MENU = {
        showMenuScroll: function () {
            $(window).scroll(function () {
                $(this).scrollTop() > $('.header-top').height() + $('.banner').height()
                    ? ($('#menu').addClass('scroll-active'), $('.back-top').addClass('d-block'))
                    : ($('#menu').removeClass('scroll-active'), $('.back-top').removeClass('d-block'));
            });
        },
        menu_search: function () {
            $(document).on('click', '.menu-search .btn-search', function (t) {
                t.preventDefault(), $(this).parent().find('.inp-search').toggleClass('active');
            });
        },
        init: function () {
            this.showMenuScroll(), this.menu_search();
        },
    },
    ACTIVE = {
        active: function (t) {
            $('.main-menu')
                .find('a[href="' + t + '"]')
                .parent()
                .addClass('active')
                .parent()
                .parent()
                .addClass('active'),
                $('.mm--open')
                    .find('a[href="' + t + '"]')
                    .parent()
                    .addClass('active')
                    .parent()
                    .parent()
                    .addClass('active'),
                $('.submenu2-bg')
                    .find('a[href="' + t + '"]')
                    .parent()
                    .addClass('active');
        },
        scrollTop: function () {
            $('.back-top img').on('click', function (t) {
                t.preventDefault(), $('html, body').animate({ scrollTop: 0 }, 500, 'linear');
            });
        },
        init: function () {
            'string' == typeof url_active
                ? ACTIVE.active(url_active)
                : 'object' == typeof url_active &&
                  $.each(url_active, function (t, e) {
                      ACTIVE.active(e);
                  }),
                this.scrollTop();
        },
    };
function loadBanner() {
    $('a img:not([src])').each(function (t, e) {
        $(e).attr('src', $(e).data('src')), $(e).parent().attr('data-load', 1);
    });
}
$(document).ready(function () {
    RESULT_FOOT.init(),
        AJAX_RESULT.init(),
        LOAD_SPIN.init(),
        LOAD_NUMBER.init(),
        SPIN_RESULT.init(),
        STATISTIC.init(),
        TAN_SUAT_LO_TO.init(),
        MENU.init(),
        ACTIVE.init(),
        setInterval(function () {
            let t = new Date(),
                e = t.getHours() + ':' + t.getMinutes();
            ('17:1' !== e && '18:1' !== e) || location.reload();
        }, 35e3),
        setTimeout(loadBanner, 5000);
});
var today = new Date(),
    dd = String(today.getDate()).padStart(2, '0'),
    mm = String(today.getMonth() + 1).padStart(2, '0'),
    yyyy = String(today.getFullYear());
$('body').on('click', '.banner-close .close-icon', function () {
    $(this).parent().next().addClass('d-block');
}),
    $('body').on('click', '.close-banner-yes', function () {
        let t = $(this).parents('.ads-container').attr('data-position') + '_' + dd + mm + yyyy;
        if (sessionStorage.getItem(t)) {
            let e = sessionStorage.getItem(t),
                n = parseInt(e) + 1;
            sessionStorage.setItem(t, n);
        } else sessionStorage.setItem(t, 1);
        $(this).parents('.ads-container').remove();
    }),
    $('body').on('click', '.close-banner-no', function () {
        $(this).parent().removeClass('d-block');
    });
let key_session = Object.keys(sessionStorage);
function getSelectedValue(t) {
    return $('#' + t)
        .find('dt a span.value')
        .html();
}
$.each(key_session, function (t, e) {
    var n = '_' + dd + mm + yyyy,
        a = key_session[t].replace(n, '');
    parseInt(sessionStorage.getItem(e)) >= 1 && $('.ads-container[data-position="' + a + '"]').remove();
}),
    $('.dropdown dt a').on('click', function (t) {
        t.preventDefault(), $('.dropdown dd ul').slideToggle('fast');
    }),
    $('.dropdown dd ul li a').on('click', function (t) {
        t.preventDefault(), $('.dropdown dd ul').hide();
    }),
    $(document).bind('click', function (t) {
        $(t.target).parents().hasClass('dropdown') || $('.dropdown dd ul').hide();
    }),
    $(function () {
        xoso.init();
    });
let xosoconfig = { rootPath: '/' },
    isrunning = !1,
    xoso = {
        variables: { lotMsgListMN: 0, lotMsgListMT: 0, currentPage: 1 },
        init: function () {
            this.events();
        },
        events: function () {
            $('#hover-number td').mouseout(function () {
                let t = $(this).parent().attr('data');
                $('#table-' + t + ' tbody tr td div').each(function (t, e) {
                    let n = $(e).html().split('<mark>');
                    $(e).html(n);
                });
            }),
                $('#hover-number td').mouseover(function () {
                    let t = $(this).text(),
                        e = $(this).parent().attr('data');
                    $('#table-' + e + ' tbody tr td div').each(function (e, n) {
                        let a = $(n).html();
                        (a[a.length - 1] != t && a[a.length - 2] != t) ||
                            $(n).html(
                                a.slice(0, a.length - 2) + '<mark>' + a.slice(a.length - 2, a.length) + '</mark>'
                            );
                    });
                });
        },
        virtualPath: function (t) {
            return window.location.protocol + '//' + window.location.host + t;
        },
        ajaxEvents: {
            OnComplete: function () {
                $('.ajaxLoading').html(''), $('.btn.btn-red').prop('disabled', !1).css('cursor', 'default');
            },
            OnSuccess: function (t, e, n) {
                'success' == e
                    ? 1 == t.jsonFlag
                        ? t.jsonRetval.length > 0 &&
                          xoso.dialog(null, 'Thông báo', t.jsonRetval, null, null, function () {
                              window.location.href = xosoconfig.rootPath + 'profile.html';
                          })
                        : t.jsonRetval.length > 0 && xoso.dialog(null, 'Thông báo', t.jsonRetval, null, null, null)
                    : alert('Quý khách vui lòng thử lại sau.');
            },
            OnFailure: function (t) {
                $('.ajaxLoading').html(''), $('.btn.btn-red').prop('disabled', !1).css('cursor', 'default');
            },
        },
        RunningQuayThuVietlott: 0,
        RunRandomMegaComplete: function (t) {
            (xoso.RunningQuayThuVietlott = 0), (isrunning = !1), $('#btnStartOrStop_Mega645').html('Quay thử lại');
        },
        RunRandomPowerComplete: function (t) {
            (xoso.RunningQuayThuVietlott = 0), (isrunning = !1), $('#btnStartOrStop_Power655').html('Quay thử lại');
        },
        RunRandomMax4DComplete: function (t) {
            (xoso.RunningQuayThuVietlott = 0), (isrunning = !1), $('#btnStartOrStop_Max4D').html('Quay thử lại');
        },
        RunRandomPower: function () {
            (xoso.RunningQuayThuVietlott = 1), (isrunning = !0), $('#btnStartOrStop_Power655').html('Đang quay thử');
            new Date().getTime();
            let t = new Array(),
                e = null,
                n = null,
                a = [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                ];
            (e = xoso.getRandomMegaString(a)),
                t.push(e),
                (n = a.indexOf(e)) > -1 && a.splice(n, 1),
                (e = xoso.getRandomMegaString(a)),
                t.push(e),
                (n = a.indexOf(e)) > -1 && a.splice(n, 1),
                (e = xoso.getRandomMegaString(a)),
                t.push(e),
                (n = a.indexOf(e)) > -1 && a.splice(n, 1),
                (e = xoso.getRandomMegaString(a)),
                t.push(e),
                (n = a.indexOf(e)) > -1 && a.splice(n, 1),
                (e = xoso.getRandomMegaString(a)),
                t.push(e),
                (n = a.indexOf(e)) > -1 && a.splice(n, 1),
                (e = xoso.getRandomMegaString(a)),
                t.push(e),
                (n = a.indexOf(e)) > -1 && a.splice(n, 1),
                (e = xoso.getRandomMegaString(a)),
                t.push(e);
            for (let e = 0; e < t.length; e++) $('#power655_' + e).html('<i class="fa fa-spinner fa-spin"></i>');
            for (let e = 0; e < t.length; e++) xoso.sethtmlPower('power655_' + e, t[e], 2e3 * e);
        },
        RunRandomMax4D: function () {
            (xoso.RunningQuayThuVietlott = 2), (isrunning = !0), $('#btnStartOrStop_Max4D').html('Đang quay thử');
            new Date().getTime();
            let t = new Array();
            t.push(xoso.getRandomString(4)),
                t.push(xoso.getRandomString(4)),
                t.push(xoso.getRandomString(4)),
                t.push(xoso.getRandomString(4)),
                t.push(xoso.getRandomString(4)),
                t.push(xoso.getRandomString(4)),
                t.push(xoso.getRandomString(4)),
                t.push(xoso.getRandomString(4));
            for (let e = 0; e < t.length; e++) $('#max4d_' + e).html('<i class="fa fa-spinner fa-spin"></i>');
            for (let e = 0; e < t.length - 2; e++) xoso.sethtmlMax4D('max4d_' + e, t[e], 2e3 * e);
        },
        RunRandomMega: function () {
            (xoso.RunningQuayThuVietlott = 3), (isrunning = !0), $('#btnStartOrStop_Mega645').html('Đang quay thử');
            new Date().getTime();
            let t = new Array(),
                e = null,
                n = null,
                a = [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                ];
            (e = xoso.getRandomMegaString(a)),
                t.push(e),
                (n = a.indexOf(e)) > -1 && a.splice(n, 1),
                (e = xoso.getRandomMegaString(a)),
                t.push(e),
                (n = a.indexOf(e)) > -1 && a.splice(n, 1),
                (e = xoso.getRandomMegaString(a)),
                t.push(e),
                (n = a.indexOf(e)) > -1 && a.splice(n, 1),
                (e = xoso.getRandomMegaString(a)),
                t.push(e),
                (n = a.indexOf(e)) > -1 && a.splice(n, 1),
                (e = xoso.getRandomMegaString(a)),
                t.push(e),
                (n = a.indexOf(e)) > -1 && a.splice(n, 1),
                (e = xoso.getRandomMegaString(a)),
                t.push(e);
            for (let e = 0; e < t.length; e++) $('#mega645_' + e).html('<i class="fa fa-spinner fa-spin"></i>');
            for (let e = 0; e < t.length; e++) xoso.sethtmlMega('mega645_' + e, t[e], 2e3 * e);
        },
        sethtmlMega: function (t, e, n) {
            setTimeout(function () {
                xoso.sethtmlMegaRuning(t, e);
            }, n);
        },
        sethtmlPower: function (t, e, n) {
            setTimeout(function () {
                xoso.sethtmlPowerRuning(t, e);
            }, n);
        },
        sethtmlMax4D: function (t, e, n) {
            setTimeout(function () {
                xoso.sethtmlMax4DRuning(t, e);
            }, n);
        },
        sethtmlMegaRuning: function (t, e) {
            let n = null,
                a = new Date().getTime();
            n = setInterval(function () {
                if (new Date().getTime() - a < 2e3) {
                    let e = Math.floor(46 * Math.random() + 0);
                    $('#' + t).text('' + parseInt(e) < 10 ? '0' + e : e);
                } else clearInterval(n), $('#' + t).html(e), $('#' + t).attr('data', e);
            }, 100);
        },
        sethtmlPowerRuning: function (t, e) {
            let n = null,
                a = new Date().getTime();
            n = setInterval(function () {
                if (new Date().getTime() - a < 2e3) {
                    let e = Math.floor(56 * Math.random() + 0);
                    $('#' + t).text('' + parseInt(e) < 10 ? '0' + e : e);
                } else clearInterval(n), $('#' + t).html(e), $('#' + t).attr('data', e);
            }, 100);
        },
        sethtmlMax4DRuning: function (t, e) {
            let n = null,
                a = new Date().getTime();
            $('#' + t).html(
                '<span id="output0"></span><span id="output1"></span><span id="output2"></span><span id="output3"></span>'
            ),
                (n = setInterval(function () {
                    if (new Date().getTime() - a < 2e3)
                        for (let t = 0; t < e.length; t++)
                            $('#output' + t).text('' + Math.floor(10 * Math.random() + 0));
                    else
                        clearInterval(n),
                            $('#' + t).html(e),
                            $('#' + t).attr('data', e),
                            'max4d_5' == t &&
                                ($('#max4d_6').html('X' + e.substr(1)),
                                $('#max4d_6').attr('data', e),
                                $('#max4d_7').html('XX' + e.substr(2)),
                                $('#max4d_7').attr('data', e));
                }, 100));
        },
        getRandomMegaString: function (t) {
            let e = Math.floor(Math.random() * t.length);
            return parseInt(t[e]) < 10 ? '0' + t[e] : t[e];
        },
        RunRandomComplete: function (t) {
            (isrunning = !1), $('#btnStartOrStop').html('Quay thử lại');
        },
        choice: function (t, e) {
            isrunning ||
                ((mn_mt = 'table-xsmb'),
                1 == t && (mn_mt = 'table-xsmn'),
                2 == t && (mn_mt = 'table-xsmt'),
                3 == t && (mn_mt = 'table-tinh'),
                $('#' + mn_mt + ' tbody tr td div').each(function (t, n) {
                    let a = $(n).attr('data');
                    (2 != e && 3 != e) || (a.length > e && (a = a.substr(a.length - e))), $(n).text(a);
                }));
        },
        loadddlLotteries: function (t, e, n) {
            let a = document.getElementById('ddlProvincesQuayThu');
            $('#ddlProvincesQuayThu').empty(),
                1 == t
                    ? $.ajax({
                          url: xosoconfig.rootPath + 'Utils/GetAllLotteries',
                          type: 'GET',
                          success: function (t) {
                              let e,
                                  o = JSON.parse(t);
                              ((e = document.createElement('option')).text = 'Miền Bắc'),
                                  (e.value = xosoconfig.rootPath + 'quay-thu-xsmb.html'),
                                  e.setAttribute('url', xosoconfig.rootPath + 'quay-thu-xsmb.html'),
                                  a.add(e, 0);
                              for (let t = 1; t < o.length + 1; t++) {
                                  let i = o[t - 1];
                                  i.LotteryGroupId <= 1 ||
                                      (((e = document.createElement('option')).text = i.LotteryName),
                                      (e.value =
                                          xosoconfig.rootPath + 'quay-thu-xs' + i.LotteryCode.toLowerCase() + '.html'),
                                      e.setAttribute(
                                          'url',
                                          xosoconfig.rootPath + 'quay-thu-xs' + i.LotteryCode.toLowerCase() + '.html'
                                      ),
                                      i.LotteryCode == n.toUpperCase() && e.setAttribute('selected', 'selected'),
                                      a.add(e, t));
                              }
                          },
                      })
                    : ((option = document.createElement('option')),
                      (option.text = 'Miền Bắc'),
                      (option.value = xosoconfig.rootPath + 'quay-thu-xsmb.html'),
                      option.setAttribute('url', xosoconfig.rootPath + 'quay-thu-xsmb.html'),
                      1 == e && option.setAttribute('selected', 'selected'),
                      a.add(option),
                      (option = document.createElement('option')),
                      (option.text = 'Miền Nam'),
                      (option.value = xosoconfig.rootPath + 'quay-thu-xsmn.html'),
                      option.setAttribute('url', xosoconfig.rootPath + 'quay-thu-xsmn.html'),
                      2 == e && option.setAttribute('selected', 'selected'),
                      a.add(option),
                      (option = document.createElement('option')),
                      (option.text = 'Miền Trung'),
                      (option.value = xosoconfig.rootPath + 'quay-thu-xsmt.html'),
                      option.setAttribute('url', xosoconfig.rootPath + 'quay-thu-xsmt.html'),
                      3 == e && option.setAttribute('selected', 'selected'),
                      a.add(option));
        },
        sethtml: function (t, e, n) {
            setTimeout(function () {
                xoso.sethtmlRuning(t, e);
            }, n);
        },
        sethtmlRuning: function (t, e) {
            let n = null,
                a = new Date().getTime();
            $('#' + t).html(
                '<span class="output" id="output0"></span><span class="output" id="output1"></span><span class="output" id="output2"></span><span class="output" id="output3"></span><span class="output" id="output4"></span><span class="output" id="output5"></span>'
            ),
                (n = setInterval(function () {
                    if (new Date().getTime() - a < 1e3)
                        for (let t = 0; t < e.length; t++)
                            $('#output' + t).text('' + Math.floor(10 * Math.random() + 0));
                    else clearInterval(n), $('#' + t).html(e), $('#' + t).attr('data', e);
                }, 100)),
                xoso.addValueToTableLoto(e);
        },
        addValueToTableLoto: function (t) {
            if (null != t) {
                let e = (t = parseInt(t) % 100) % 10,
                    n = t / 10;
                (e = parseInt(e)), (n = parseInt(n));
                $('#item_Tail_' + e).html();
                let a = $('#item_Head_' + n).html();
                a.length > 0 ? $('#item_Head_' + n).html(a + ',' + e) : $('#item_Head_' + n).html(e);
            }
        },
        getRandomString: function (t) {
            let e = '';
            for (let n = 0; n < t; n++) e += Math.floor(10 * Math.random() + 0);
            return e;
        },
        sethtmlMN: function (t, e, n) {
            setTimeout(function () {
                xoso.sethtmlMNRuning(t, e);
            }, n);
        },
        sethtmlMNRuning: function (t, e) {
            let n = null,
                a = new Date().getTime(),
                o = $('#' + t).attr('LotteryCode');
            $('#' + t).html(
                '<span class="output" id="outputMN0"></span><span class="output" id="outputMN1"></span><span class="output" id="outputMN2"></span><span class="output" id="outputMN3"></span><span class="output" id="outputMN4"></span>'
            ),
                (n = setInterval(function () {
                    if (new Date().getTime() - a < 1e3)
                        for (let t = 0; t < e.length; t++)
                            $('#outputMN' + t).text('' + Math.floor(10 * Math.random() + 0));
                    else clearInterval(n), $('#' + t).html(e), $('#' + t).attr('data', e);
                }, 100)),
                xoso.XSMNaddValueToTableLoto(e, o);
        },
        XSMNaddValueToTableLoto: function (t, e) {
            if (null != t) {
                let n = (t = parseInt(t) % 100) % 10,
                    a = t / 10;
                (n = parseInt(n)), (a = parseInt(a));
                let o = $('#item_Head_' + e + '_' + a).html();
                o.length > 0
                    ? $('#item_Head_' + e + '_' + a).html(o + ',' + n)
                    : $('#item_Head_' + e + '_' + a).html(n);
            }
        },
        goToByScroll: function (t) {
            (t = t.replace('link', '')), $('html,body').animate({ scrollTop: $('#' + t).offset().top }, 2e3);
        },
        getTinhtheoNgay: function (t) {
            let e = xosoconfig.rootPath + 'tinh-theo-ngay-ajax.html',
                n = { strDay: t, lotteriesId: 0 };
            $.xosoAjax(e, 'Get', n, function (t) {
                $('#tinhheader').html(t);
            });
        },
        getCaptcha: function (t) {
            let e = '',
                n = this.generateUUID();
            switch (t) {
                case 1:
                    e = xosoconfig.rootPath + 'xsdp-captcha.html?id=' + n;
                    break;
                case 2:
                    e = xosoconfig.rootPath + 'register-captcha.html?id=' + n;
                    break;
                default:
                    e = xosoconfig.rootPath + 'retrivepassword-captcha.html?id=' + n;
            }
            return $('#CaptchaImg' + t).attr('src', e), !1;
        },
        generateUUID: function () {
            let t = new Date().getTime();
            return (
                window.performance && 'function' == typeof window.performance.now && (t += performance.now()),
                'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (e) {
                    let n = (t + 16 * Math.random()) % 16 | 0;
                    return (t = Math.floor(t / 16)), ('x' == e ? n : (3 & n) | 8).toString(16);
                })
            );
        },
        loteryloadmore: function (t) {
            let e = { pageIndex: xoso.variables.currentPage },
                n = $('.loadmoreResult');
            $.xosoAjax(t, 'Get', e, function (t) {
                t.length > 0 ? (xoso.variables.currentPage++, n.append(t)) : $('.btn-viewmore').hide();
            });
        },
        SoKetQua: {
            variables: { page: 1 },
            loteryloadmore: function () {
                let t = xosoconfig.rootPath + 'XSDPAjax/AjaxLoadMoreSoKetQua',
                    e = $('#ddLotteries option:selected').val(),
                    n = ($('#ddLotteries option:selected').text(), $('#ddlRollingNumbers').val());
                0 == n && (n = 30);
                let a = { lotteryId: e, rollNumber: n, pageIndex: xoso.SoKetQua.variables.page },
                    o = $('#ajaxcontent');
                $.xosoAjax(t, 'Get', a, function (t) {
                    t.length > 0 ? (xoso.SoKetQua.variables.page++, o.append(t)) : $('.btn-readmore').hide();
                });
            },
            loteryload: function () {
                let t = xosoconfig.rootPath + 'XSDPAjax/AjaxLoadMoreSoKetQua',
                    e = $('#ddLotteries option:selected').val(),
                    n = $('#ddLotteries option:selected').text(),
                    a = $('#ddlRollingNumbers').val();
                0 == a && (a = 30);
                let o = { lotteryId: e, rollNumber: a, pageIndex: 0 },
                    i = $('#ajaxcontent');
                $.xosoAjax(t, 'Get', o, function (t) {
                    t.length > 0
                        ? ((xoso.SoKetQua.variables.page = 1), i.html(t), $('#titlemain').html('Sổ kết quả xổ số ' + n))
                        : $('.btn-readmore').hide();
                });
            },
        },
        Xsmb: {
            variables: { page: 1 },
            loadmore: function () {
                let t = xosoconfig.rootPath + 'Xsmb/MobiGetMore',
                    e = { pageIndex: xoso.Xsmb.variables.page },
                    n = $('#ajaxContentContainer');
                $.xosoAjax(t, 'Get', e, function (t) {
                    t.length > 0 ? (xoso.Xsmb.variables.page++, n.append(t)) : $('#loadmore').hide();
                });
            },
            loadmorebydayofweek: function (t) {
                let e = xosoconfig.rootPath + 'Xsmb/MobiGetMoreMBTheoThu',
                    n = { pageIndex: xoso.Xsmb.variables.page, dayOfWeek: t },
                    a = $('#ajaxContentContainer');
                $.xosoAjax(e, 'Get', n, function (t) {
                    t.length > 0 ? (xoso.Xsmb.variables.page++, a.append(t)) : $('#loadmore').hide();
                });
            },
            loadLotteryMoreByDayOfWeekMobi: function (t, e) {
                let n = { pageIndex: pageIndex, dayOfWeek: e };
                $.xosoAjax(t, 'Get', n, function (t) {
                    t.length > 0 ? (pageIndex++, $('#ajaxContentContainer').append(t)) : $('#xemthem').hide();
                });
            },
        },
        Xsmt: {
            variables: { page: 1 },
            loadmore: function () {
                let t = xosoconfig.rootPath + 'Xsmt/MobiGetMore',
                    e = { pageIndex: xoso.Xsmt.variables.page },
                    n = $('#ajaxContentContainer');
                $.xosoAjax(t, 'Get', e, function (t) {
                    t.length > 0 ? (xoso.Xsmt.variables.page++, n.append(t)) : $('#loadmore').hide();
                });
            },
            loadmorebydayofweek: function (t) {
                let e = xosoconfig.rootPath + 'Xsmt/MobiGetMoreByDayOfWeek',
                    n = { pageIndex: xoso.Xsmt.variables.page, dayOfWeek: t },
                    a = $('#ajaxContentContainer');
                $.xosoAjax(e, 'Get', n, function (t) {
                    t.length > 0 ? (xoso.Xsmt.variables.page++, a.append(t)) : $('#loadmore').hide();
                });
            },
        },
        Xsmn: {
            variables: { page: 1 },
            loadmore: function () {
                let t = xosoconfig.rootPath + 'Xsmn/MobiGetMore',
                    e = { pageIndex: xoso.Xsmn.variables.page },
                    n = $('#ajaxContentContainer');
                $.xosoAjax(t, 'Get', e, function (t) {
                    t.length > 0 ? (xoso.Xsmn.variables.page++, n.append(t)) : $('#loadmore').hide();
                });
            },
            loadmorebydayofweek: function (t) {
                let e = xosoconfig.rootPath + 'Xsmn/MobiGetMoreByDayOfWeek',
                    n = { pageIndex: xoso.Xsmn.variables.page, dayOfWeek: t },
                    a = $('#ajaxContentContainer');
                $.xosoAjax(e, 'Get', n, function (t) {
                    t.length > 0 ? (xoso.Xsmn.variables.page++, a.append(t)) : $('#loadmore').hide();
                });
            },
        },
        Xsmnbydayofweek: {
            variables: { page: 1 },
            loterytheothuloadmore: function (t, e) {
                let n = { pageIndex: xoso.Xsmnbydayofweek.variables.page, dayofWeek: e },
                    a = $('.lotteryMNByDayOfWeekResult');
                $.xosoAjax(t, 'Get', n, function (t) {
                    t.length > 0 ? (xoso.Xsmnbydayofweek.variables.page++, a.append(t)) : $('.btn-viewmore').hide();
                });
            },
        },
        KQDai: {
            variables: { page: 1 },
            loteryloadmore: function (t, e) {
                let n = { lotteryId: e, pageIndex: xoso.KQDai.variables.page },
                    a = $('.lotteryResult');
                $.xosoAjax(t, 'Get', n, function (t) {
                    t.length > 0 ? (xoso.KQDai.variables.page++, a.append(t)) : $('.btn-viewmore').hide();
                });
            },
        },
        dayOfWeekChange: function (t, e) {
            let n = [],
                a = $('#ddLotteries'),
                o = void 0 !== e && $.isNumeric(e);
            $.xosoAjax('/Utils/GetLotteriesByDayOfWeek', 'Get', { dayOfWeek: t }, function (t) {
                n = [];
                let i = JSON.parse(t);
                o ? a.html('') : a.html($('<option></option>').val(0).attr('data-id', 0).html('Miền Bắc')),
                    $.each(i, function (t, i) {
                        o
                            ? i.LotteryGroupId == e &&
                              (n.push(i),
                              a.append(
                                  $('<option></option>')
                                      .val(i.LotteryId)
                                      .attr('data-id', i.LotteryGroupId)
                                      .attr('data-code', i.LotteryCode)
                                      .html(i.LotteryName)
                              ))
                            : i.LotteryGroupId > 1 &&
                              (n.push(i),
                              a.append(
                                  $('<option></option>')
                                      .val(i.LotteryId)
                                      .attr('data-id', i.LotteryGroupId)
                                      .attr('data-code', i.LotteryCode)
                                      .html(i.LotteryName)
                              ));
                    });
            });
        },
        ThongKe: {
            GroupChange: function () {
                $('#ddLotteries').html('');
                $('#ddlGroups');
                let t = $('#ddLotteries'),
                    e = $('#ddlGroups option:selected').val();
                $('#ddLotteries option:selected').val();
                e <= 1
                    ? t.append($('<option></option>').val(0).html('Miền Bắc'))
                    : $.ajax({
                          url: xosoconfig.rootPath + 'Utils/GetAllLotteries',
                          type: 'Get',
                          success: function (n) {
                              let a = JSON.parse(n);
                              $.each(a, function (n, a) {
                                  a.LotteryGroupId == e &&
                                      t.append($('<option></option>').val(a.LotteryId).html(a.LotteryName));
                              });
                          },
                      });
            },
            getHomeReport: function () {
                let t = xosoconfig.rootPath + 'XSDPAjax/GetHomeReport',
                    e = $('#ddLotteries option:selected').val(),
                    n = $('#ddLotteries option:selected').text(),
                    a = $('#ddLotteries option:selected').attr('tag'),
                    o = $('#ddlRollingNumbers').val();
                0 == o && (o = 30);
                let i = { lotteryId: e, TimeRolled: o },
                    s = $('#HomeResult');
                s.html(''),
                    $.xosoAjax(t, 'Get', i, function (t) {
                        t.length > 0 && s.html(t),
                            $('#titlemain').html('Thống kê kết quả 2 số cuối đặc biệt XS' + a + ' - xổ số ' + n);
                    });
            },
            getThongKeTheoTanSuat: function () {
                let t = xosoconfig.rootPath + 'XSDPAjax/AjaxGetTanSuatDB',
                    e = $('#ddLotteries option:selected').val(),
                    n = ($('#ddLotteries option:selected').text(), $('#ddlRollingNumbers').val()),
                    a = $('input:text[name=date]').val(),
                    o = $('input[name=TanSuatType]:checked').val(),
                    i = $('#ddLotteries option:selected').attr('tag');
                0 == n && (n = 30);
                let s = { lotteryId: e, rollNumber: n, dateview: a, type: o },
                    l = $('#content');
                $.xosoAjax(t, 'Get', s, function (t) {
                    t.length > 0 && l.html(t), $('.title-main').html('Bảng thống kê tần suất giải đặc biệt XS' + i);
                });
            },
            lokepResult: function () {
                let t = xosoconfig.rootPath + 'ThongKeAjax/ThongKeLoKep',
                    e = $('#ddLotteries option:selected').val(),
                    n = $('#ddLotteries option:selected').text(),
                    a = $('#ddLotteries option:selected').data('code'),
                    o = $('#ddlDayOfWeeks option:selected').text(),
                    i = $('#ddlRollingNumbers option:selected').val(),
                    s = {
                        lotteryId: e,
                        lotteryGroupId: $('#ddLotteries option:selected').data('id'),
                        lotteryName: n,
                        lotteryCode: a,
                        rollingNumber: i,
                        dayOfWeek: o,
                    },
                    l = $('#ajaxContentContainer');
                ($('#titlelokep').html = 'Lô kép ' + a + ' - Thống kê Lô kép ' + n + ' Chuẩn‌'),
                    $.xosoAjax(t, 'POST', s, function (t) {
                        t.length > 0 ? l.html(t) : $('.btn-readmore').hide();
                    });
            },
            giaiDacBietHome: {
                getReport: function () {
                    let t = $('#ddLotteries option:selected').val(),
                        e = $('#txtDateFrom1').val(),
                        n = $('#txtDateTo1').val(),
                        a = xosoconfig.rootPath + 'ThongKeAjax/ThongKeGiaiDacBietByDate',
                        o = { lotteryId: t, dateFrom: e, dateTo: n },
                        i = $('#tkgiaiDB');
                    $.xosoAjax(a, 'Get', o, function (t) {
                        t.length > 0 && i.html(t);
                    });
                },
            },
            giaiDacBiet: {
                getReport: function () {
                    let t = $('#ddLotteries option:selected').val(),
                        e = $('#ddLotteries option:selected').text(),
                        n = $('#amplitude').val(),
                        a = xosoconfig.rootPath + 'thong-ke-giai-db-ajax.html',
                        o = { lotteryId: t, lotteryName: e, pageIndex: 0, rowAmount: n },
                        i = $('#tkgiaiDB');
                    $.xosoAjax(a, 'Get', o, function (t) {
                        t.length > 0 && i.html(t);
                    });
                },
            },
            TKLoKep: {
                getReport: function () {
                    let t = $('#ddLotteries option:selected').val(),
                        e = $('#ddLotteries option:selected').text(),
                        n = $('#ddLotteries option:selected').data('code'),
                        a = $('#ddlDayOfWeeks option:selected').text(),
                        o = $('#ddlRollingNumbers option:selected').val(),
                        i = $('#ddLotteries option:selected').data('id'),
                        s = document.getElementById('loadmore');
                    (s.value = 'Đang tải dữ liệu...'),
                        $.xosoAjax(
                            '/ThongKeAjax/ThongKeLoKep',
                            'post',
                            {
                                lotteryId: t,
                                lotteryGroupId: i,
                                lotteryName: e,
                                lotteryCode: n,
                                rollingNumber: o,
                                dayOfWeek: a,
                            },
                            function (t) {
                                t.length > 0 && $('#ajaxContentContainer').html(t);
                            }
                        ),
                        (s.value = 'Kết quả');
                },
            },
            DayOfWeekChange: function () {
                let t = $('#ddLotteries'),
                    e = $('#ddlDayOfWeeks option:selected').val(),
                    n = xosoconfig.rootPath + 'Utils/GetLotteriesByDayOfWeek',
                    a = { dayOfWeek: e };
                $.xosoAjax(n, 'Get', a, function (e) {
                    let n = JSON.parse(e);
                    t.html($('<option></option>').val(0).html('Miền Bắc')),
                        $.each(n, function (e, n) {
                            n.LotteryGroupId > 1 &&
                                t.append(
                                    $('<option></option>')
                                        .val(n.LotteryId)
                                        .html(n.LotteryName)
                                        .attr('tag', n.LotteryCode)
                                );
                        });
                });
            },
            TKDauDuoiDayOfWeekChange: function () {
                let t = $('#ddLotteries'),
                    e = $('#ddlDayOfWeeks option:selected').val();
                t.html($('<option></option>').val('0@@1').html('Miền Bắc'));
                let n = xosoconfig.rootPath + 'Utils/GetLotteriesByDayOfWeek',
                    a = { dayOfWeek: e };
                $.xosoAjax(n, 'Get', a, function (e) {
                    let n = JSON.parse(e);
                    $.each(n, function (e, n) {
                        n.LotteryGroupId > 1 &&
                            t.append(
                                $('<option></option>')
                                    .val(n.LotteryId + '@@' + n.LotteryGroupId)
                                    .html(n.LotteryName)
                            );
                    });
                });
            },
            MNMTDayOfWeekChange: function (t) {
                let e = $('#ddLotteries'),
                    n = $('#ddlMNDayOfWeeks option:selected').val(),
                    a = xosoconfig.rootPath + 'Utils/GetLotteriesByDayOfWeek',
                    o = { dayOfWeek: n };
                e.html(''),
                    $.xosoAjax(a, 'Get', o, function (n) {
                        let a = JSON.parse(n);
                        $.each(a, function (n, a) {
                            a.LotteryGroupId == t &&
                                e.append($('<option></option>').val(a.LotteryId).html(a.LotteryName));
                        });
                    });
            },
            MNMTDayOfWeekChangeLotteryCode: function (t) {
                let e = $('#ddLotteries'),
                    n = $('#ddlMNDayOfWeeks option:selected').val(),
                    a = xosoconfig.rootPath + 'Utils/GetLotteriesByDayOfWeek',
                    o = { dayOfWeek: n };
                e.html(''),
                    $.xosoAjax(a, 'Get', o, function (n) {
                        let a = JSON.parse(n);
                        $.each(a, function (n, a) {
                            a.LotteryGroupId == t &&
                                e.append($('<option></option>').val(a.LotteryCode.toLowerCase()).html(a.LotteryName));
                        });
                    });
            },
            thongKeCauTheoTinh: function () {
                let t = $('#ddLotteries option:selected').val();
                window.location = '/tham-khao-xo-so/soi-cau-xo-so-' + t + '.html';
            },
            Thongke0099: function () {
                $('#ajaxContentContainer').html(
                    '&nbsp;&nbsp;<img src="/public/images/load/Spinner.svg"/> Đang tải dữ liệu...'
                );
                let t = $('#ddLotteries').val(),
                    e = $('#ddLotteries option:selected').text(),
                    n = $('#ddlTimeRooled').val(),
                    a = xosoconfig.rootPath + 'ThongKeAjax/ThongKe0099',
                    o = { lotteryId: t, lotteryName: e, rollNumber: n },
                    i = $('#ajaxContentContainer');
                $.xosoAjax(a, 'Get', o, function (t) {
                    t.length > 0 && i.html(t);
                });
            },
        },
        articles: {
            variables: { page: 1 },
            loadmore: function (t, e) {
                let n = { catId: e, pageIndex: xoso.articles.variables.page },
                    a = $('.loadmoreResult');
                $.xosoAjax(t, 'Get', n, function (t) {
                    t.length > 0 ? (xoso.articles.variables.page++, a.append(t)) : $('.btn-viewmore').hide();
                });
            },
        },
        setPercent: function () {
            let t = $('.progress').length;
            for (let e = 1; e <= t; e++) {
                let t = parseInt($('#percent-' + e).data('percent'));
                $('#progress-percent-' + e).width(t + '%');
            }
        },
        scrollToElement: function (t, e) {
            let n = { scrollTop: $(t).offset().top };
            $('html,body').animate(n, 'slow', 'swing', function () {
                'function' == typeof e && e(), (e = null);
            });
        },
        clickScroll: function (t) {
            let e = '#' + t;
            $('html,body').animate({ scrollTop: $(e).offset().top }, 1e3);
        },
        dialog: function (t, e, n, a, o, i) {
            (null == t ? $('<div><p style="padding:15px;">' + (null == n ? '' : n) + '</p></div>') : $('#' + t)).dialog(
                {
                    title: null == e ? 'Thông báo' : e,
                    width: null == a ? 300 : a,
                    height: null == o ? 200 : o,
                    resizable: !1,
                    autoOpen: !0,
                    modal: !0,
                    responsive: !0,
                    buttons: {
                        Đóng: function () {
                            $(this).dialog('close');
                        },
                    },
                    close: 'function' == typeof i ? i : function () {},
                }
            );
        },
    };
function showAlertDangQuay() {
    try {
        let t = '';
        switch (xoso.RunningQuayThuVietlott) {
            case 3:
                t = 'xổ số Mega 6/45';
                break;
            case 1:
                t = 'xổ số Power 6/55';
                break;
            case 2:
                t = 'xổ số Max4D';
        }
        if (t.length) {
            let e = 'Đang quay thử ' + t;
            toastr.warning(e);
        }
    } catch (t) {}
}
function startOrStopMega645() {
    if (xoso.RunningQuayThuVietlott > 0 && 3 != xoso.RunningQuayThuVietlott) showAlertDangQuay();
    else {
        0 == document.getElementById('btnStartOrStop_Mega645').innerHTML.toString().includes('Đang quay thử') &&
            (xoso.RunRandomMega(),
            setTimeout(function () {
                xoso.RunRandomMegaComplete();
            }, 12e3));
    }
}
function startOrStopPower655() {
    if (xoso.RunningQuayThuVietlott > 0 && 1 != xoso.RunningQuayThuVietlott) showAlertDangQuay();
    else {
        0 == document.getElementById('btnStartOrStop_Power655').innerHTML.toString().includes('Đang quay thử') &&
            (xoso.RunRandomPower(),
            setTimeout(function () {
                xoso.RunRandomPowerComplete();
            }, 14e3));
    }
}
function startOrStopMax4D() {
    if (xoso.RunningQuayThuVietlott > 0 && 2 != xoso.RunningQuayThuVietlott) showAlertDangQuay();
    else {
        0 == document.getElementById('btnStartOrStop_Max4D').innerHTML.toString().includes('Đang quay thử') &&
            (xoso.RunRandomMax4D(),
            setTimeout(function () {
                xoso.RunRandomMax4DComplete();
            }, 16e3));
    }
}
let $dateEnd = $('#dateEnd'),
    $dateBegin = $('#dateBegin');
function copyToClipboard(t) {
    var e = $('<input>');
    $('body').append(e), e.val(t).select(), document.execCommand('copy'), e.remove(), alert('Đã copy dàn xong!');
}
$dateEnd.datepicker({ format: 'dd/mm/yyyy', endDate: '+0d', startDate: '-1m' }).on('change', function () {
    let t = $dateEnd.datepicker('getDate');
    $dateBegin.datepicker('setEndDate', t);
}),
    $dateBegin.datepicker({ format: 'dd/mm/yyyy', endDate: '+0d' }).on('change', function () {
        let t = $dateBegin.datepicker('getDate');
        $dateEnd.datepicker('setStartDate', t);
    }),
    $('#datepicker')
        .datepicker({ format: 'dd-mm-yyyy', endDate: '+0d', todayHighlight: !0, autoclose: !0 })
        .on('changeDate', function (t) {
            let e = $('#datepicker').datepicker('getFormattedDate');
            window.location.href = base_url + 'kqxs-ngay-' + e + '.html';
        }),
    document.querySelector('#menu-mobile') &&
        document.addEventListener('DOMContentLoaded', () => {
            const t = new MmenuLight(document.querySelector('#menu-mobile'), {
                title: "<?php echo $this->settings['name']?>",
                slidingSubmenus: !1,
            });
            t.enable('(max-width: 768px)'),
                t.offcanvas(),
                document.querySelector('a[href="#menu-mobile"]').addEventListener('click', (e) => {
                    t.open(), e.preventDefault(), e.stopPropagation();
                });
        });
